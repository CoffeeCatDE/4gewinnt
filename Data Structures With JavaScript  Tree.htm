<!DOCTYPE html>
<html data-ad-targeting="{&quot;code&quot;:[&quot;programming-fundamentals&quot;,&quot;javascript&quot;],&quot;publift_mv_testing&quot;:&quot;optimized&quot;}" data-ads="[{&quot;doubleclick_id&quot;:&quot;11757429&quot;,&quot;unit_name&quot;:&quot;hub_development&quot;,&quot;location&quot;:&quot;inarticle&quot;,&quot;width&quot;:300,&quot;height&quot;:250,&quot;slot_id&quot;:&quot;1392179526912-0&quot;,&quot;mappings&quot;:[{&quot;viewport&quot;:{&quot;width&quot;:980,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:336,&quot;height&quot;:280},{&quot;width&quot;:300,&quot;height&quot;:250}]},{&quot;viewport&quot;:{&quot;width&quot;:750,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:336,&quot;height&quot;:280},{&quot;width&quot;:300,&quot;height&quot;:250}]},{&quot;viewport&quot;:{&quot;width&quot;:0,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:300,&quot;height&quot;:250},{&quot;width&quot;:300,&quot;height&quot;:100},{&quot;width&quot;:320,&quot;height&quot;:50},{&quot;width&quot;:300,&quot;height&quot;:50}]}]},{&quot;doubleclick_id&quot;:&quot;11757429&quot;,&quot;unit_name&quot;:&quot;hub_development&quot;,&quot;location&quot;:&quot;post_top&quot;,&quot;width&quot;:300,&quot;height&quot;:250,&quot;slot_id&quot;:&quot;1379650391729-0&quot;,&quot;mappings&quot;:[{&quot;viewport&quot;:{&quot;width&quot;:980,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:300,&quot;height&quot;:600},{&quot;width&quot;:300,&quot;height&quot;:250}]},{&quot;viewport&quot;:{&quot;width&quot;:0,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:300,&quot;height&quot;:250},{&quot;width&quot;:300,&quot;height&quot;:100},{&quot;width&quot;:320,&quot;height&quot;:50},{&quot;width&quot;:300,&quot;height&quot;:50}]}]},{&quot;doubleclick_id&quot;:&quot;11757429&quot;,&quot;unit_name&quot;:&quot;hub_development&quot;,&quot;location&quot;:&quot;post_mid&quot;,&quot;width&quot;:300,&quot;height&quot;:250,&quot;slot_id&quot;:&quot;1382314910331-0&quot;,&quot;mappings&quot;:[{&quot;viewport&quot;:{&quot;width&quot;:980,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:300,&quot;height&quot;:600},{&quot;width&quot;:300,&quot;height&quot;:250}]},{&quot;viewport&quot;:{&quot;width&quot;:0,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:300,&quot;height&quot;:250},{&quot;width&quot;:300,&quot;height&quot;:100},{&quot;width&quot;:320,&quot;height&quot;:50},{&quot;width&quot;:300,&quot;height&quot;:50}]}]},{&quot;doubleclick_id&quot;:&quot;11757429&quot;,&quot;unit_name&quot;:&quot;hub_development&quot;,&quot;location&quot;:&quot;post_comments&quot;,&quot;width&quot;:300,&quot;height&quot;:250,&quot;slot_id&quot;:&quot;1379650407131-0&quot;,&quot;mappings&quot;:[{&quot;viewport&quot;:{&quot;width&quot;:980,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:300,&quot;height&quot;:250}]},{&quot;viewport&quot;:{&quot;width&quot;:750,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:300,&quot;height&quot;:250}]},{&quot;viewport&quot;:{&quot;width&quot;:0,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:300,&quot;height&quot;:250},{&quot;width&quot;:300,&quot;height&quot;:600},{&quot;width&quot;:300,&quot;height&quot;:100},{&quot;width&quot;:320,&quot;height&quot;:50},{&quot;width&quot;:300,&quot;height&quot;:50}]}]},{&quot;location&quot;:&quot;leader&quot;,&quot;unit_name&quot;:&quot;hub_development&quot;,&quot;slot_id&quot;:&quot;1391730982123-0&quot;,&quot;lazy&quot;:false,&quot;width&quot;:728,&quot;height&quot;:90,&quot;zoneid&quot;:533579,&quot;mappings&quot;:[{&quot;viewport&quot;:{&quot;width&quot;:980,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:970,&quot;height&quot;:250},{&quot;width&quot;:970,&quot;height&quot;:90},{&quot;width&quot;:728,&quot;height&quot;:90}]},{&quot;viewport&quot;:{&quot;width&quot;:750,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:728,&quot;height&quot;:90}]},{&quot;viewport&quot;:{&quot;width&quot;:0,&quot;height&quot;:0},&quot;units&quot;:[{&quot;width&quot;:300,&quot;height&quot;:100},{&quot;width&quot;:300,&quot;height&quot;:50},{&quot;width&quot;:320,&quot;height&quot;:50}]}],&quot;doubleclick_id&quot;:&quot;11757429&quot;}]" data-app-version="051bd41c376a366e96eb84281c3c3092326bb576-production" style="" class=" js no-touch history"><head>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"><link rel="stylesheet" media="all" href="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/application-08a32ef707ae3e21029b8d58f662fb09.css"><link href="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/css.css" rel="stylesheet" type="text/css"><meta charset="utf-8">
<script src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/nr-1099.js"></script><script type="text/javascript">window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","errorBeacon":"bam.nr-data.net","licenseKey":"27851e2035","applicationID":"3094824","transactionName":"JQpZTURXXlRcRBYDQxIMVFVTSx1LUVlO","queueTime":0,"applicationTime":131,"agent":""}</script>
<script type="text/javascript">(window.NREUM||(NREUM={})).loader_config={xpid:"VgUFWFRbGwAAXVVaBQU="};window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o||n)},o,o.exports)}return n[e].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({1:[function(t,n,e){function r(t){try{s.console&&console.log(t)}catch(n){}}var o,i=t("ee"),a=t(16),s={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(s.console=!0,o.indexOf("dev")!==-1&&(s.dev=!0),o.indexOf("nr_dev")!==-1&&(s.nrDev=!0))}catch(c){}s.nrDev&&i.on("internal-error",function(t){r(t.stack)}),s.dev&&i.on("fn-err",function(t,n,e){r(e.stack)}),s.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(s,function(t,n){return t}).join(", ")))},{}],2:[function(t,n,e){function r(t,n,e,r,s){try{p?p-=1:o(s||new UncaughtException(t,n,e),!0)}catch(f){try{i("ierr",[f,c.now(),!0])}catch(d){}}return"function"==typeof u&&u.apply(this,a(arguments))}function UncaughtException(t,n,e){this.message=t||"Uncaught error with no additional information",this.sourceURL=n,this.line=e}function o(t,n){var e=n?null:c.now();i("err",[t,e])}var i=t("handle"),a=t(17),s=t("ee"),c=t("loader"),f=t("gos"),u=window.onerror,d=!1,l="nr@seenError",p=0;c.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(h){"stack"in h&&(t(8),t(7),"addEventListener"in window&&t(5),c.xhrWrappable&&t(9),d=!0)}s.on("fn-start",function(t,n,e){d&&(p+=1)}),s.on("fn-err",function(t,n,e){d&&!e[l]&&(f(e,l,function(){return!0}),this.thrown=!0,o(e))}),s.on("fn-end",function(){d&&!this.thrown&&p>0&&(p-=1)}),s.on("internal-error",function(t){i("ierr",[t,c.now(),!0])})},{}],3:[function(t,n,e){t("loader").features.ins=!0},{}],4:[function(t,n,e){function r(t){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var o=t("ee"),i=t("handle"),a=t(8),s=t(7),c="learResourceTimings",f="addEventListener",u="resourcetimingbufferfull",d="bstResource",l="resource",p="-start",h="-end",m="fn"+p,v="fn"+h,w="bstTimer",y="pushState",g=t("loader");g.features.stn=!0,t(6);var b=NREUM.o.EV;o.on(m,function(t,n){var e=t[0];e instanceof b&&(this.bstStart=g.now())}),o.on(v,function(t,n){var e=t[0];e instanceof b&&i("bst",[e,n,this.bstStart,g.now()])}),a.on(m,function(t,n,e){this.bstStart=g.now(),this.bstType=e}),a.on(v,function(t,n){i(w,[n,this.bstStart,g.now(),this.bstType])}),s.on(m,function(){this.bstStart=g.now()}),s.on(v,function(t,n){i(w,[n,this.bstStart,g.now(),"requestAnimationFrame"])}),o.on(y+p,function(t){this.time=g.now(),this.startPath=location.pathname+location.hash}),o.on(y+h,function(t){i("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),f in window.performance&&(window.performance["c"+c]?window.performance[f](u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["c"+c]()},!1):window.performance[f]("webkit"+u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["webkitC"+c]()},!1)),document[f]("scroll",r,{passive:!0}),document[f]("keypress",r,!1),document[f]("click",r,!1)}},{}],5:[function(t,n,e){function r(t){for(var n=t;n&&!n.hasOwnProperty(u);)n=Object.getPrototypeOf(n);n&&o(n)}function o(t){s.inPlace(t,[u,d],"-",i)}function i(t,n){return t[1]}var a=t("ee").get("events"),s=t(19)(a,!0),c=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";n.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,n){var e=t[1],r=c(e,"nr@wrapped",function(){function t(){if("function"==typeof e.handleEvent)return e.handleEvent.apply(e,arguments)}var n={object:t,"function":e}[typeof e];return n?s(n,"fn-",null,n.name||"anonymous"):e});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],6:[function(t,n,e){var r=t("ee").get("history"),o=t(19)(r);n.exports=r,o.inPlace(window.history,["pushState","replaceState"],"-")},{}],7:[function(t,n,e){var r=t("ee").get("raf"),o=t(19)(r),i="equestAnimationFrame";n.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],8:[function(t,n,e){function r(t,n,e){t[0]=a(t[0],"fn-",null,e)}function o(t,n,e){this.method=e,this.timerDuration=isNaN(t[1])?0:+t[1],t[0]=a(t[0],"fn-",this,e)}var i=t("ee").get("timer"),a=t(19)(i),s="setTimeout",c="setInterval",f="clearTimeout",u="-start",d="-";n.exports=i,a.inPlace(window,[s,"setImmediate"],s+d),a.inPlace(window,[c],c+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(c+u,r),i.on(s+u,o)},{}],9:[function(t,n,e){function r(t,n){d.inPlace(n,["onreadystatechange"],"fn-",s)}function o(){var t=this,n=u.context(t);t.readyState>3&&!n.resolved&&(n.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,y,"fn-",s)}function i(t){g.push(t),h&&(x?x.then(a):v?v(a):(E=-E,O.data=E))}function a(){for(var t=0;t<g.length;t++)r([],g[t]);g.length&&(g=[])}function s(t,n){return n}function c(t,n){for(var e in t)n[e]=t[e];return n}t(5);var f=t("ee"),u=f.get("xhr"),d=t(19)(u),l=NREUM.o,p=l.XHR,h=l.MO,m=l.PR,v=l.SI,w="readystatechange",y=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],g=[];n.exports=u;var b=window.XMLHttpRequest=function(t){var n=new p(t);try{u.emit("new-xhr",[n],n),n.addEventListener(w,o,!1)}catch(e){try{u.emit("internal-error",[e])}catch(r){}}return n};if(c(p,b),b.prototype=p.prototype,d.inPlace(b.prototype,["open","send"],"-xhr-",s),u.on("send-xhr-start",function(t,n){r(t,n),i(n)}),u.on("open-xhr-start",r),h){var x=m&&m.resolve();if(!v&&!m){var E=1,O=document.createTextNode(E);new h(a).observe(O,{characterData:!0})}}else f.on("fn-end",function(t){t[0]&&t[0].type===w||a()})},{}],10:[function(t,n,e){function r(t){var n=this.params,e=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!n.aborted){if(e.duration=a.now()-this.startTime,4===t.readyState){n.status=t.status;var i=o(t,this.lastSize);if(i&&(e.rxSize=i),this.sameOrigin){var c=t.getResponseHeader("X-NewRelic-App-Data");c&&(n.cat=c.split(", ").pop())}}else n.status=0;e.cbTime=this.cbTime,f.emit("xhr-done",[t],t),s("xhr",[n,e,this.startTime])}}}function o(t,n){var e=t.responseType;if("json"===e&&null!==n)return n;var r="arraybuffer"===e||"blob"===e||"json"===e?t.response:t.responseText;return h(r)}function i(t,n){var e=c(n),r=t.params;r.host=e.hostname+":"+e.port,r.pathname=e.pathname,t.sameOrigin=e.sameOrigin}var a=t("loader");if(a.xhrWrappable){var s=t("handle"),c=t(11),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(14),h=t(13),m=window.XMLHttpRequest;a.features.xhr=!0,t(9),f.on("new-xhr",function(t){var n=this;n.totalCbs=0,n.called=0,n.cbTime=0,n.end=r,n.ended=!1,n.xhrGuids={},n.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){n.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,n){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&n.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,n){var e=this.metrics,r=t[0],o=this;if(e&&r){var i=h(r);i&&(e.txSize=i)}this.startTime=a.now(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof n.onload))&&o.end(n)}catch(e){try{f.emit("internal-error",[e])}catch(r){}}};for(var s=0;s<d;s++)n.addEventListener(u[s],this.listener,!1)}),f.on("xhr-cb-time",function(t,n,e){this.cbTime+=t,n?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof e.onload||this.end(e)}),f.on("xhr-load-added",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&!this.xhrGuids[e]&&(this.xhrGuids[e]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&this.xhrGuids[e]&&(delete this.xhrGuids[e],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],n)}),f.on("removeEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],n)}),f.on("fn-start",function(t,n,e){n instanceof m&&("onload"===e&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=a.now()))}),f.on("fn-end",function(t,n){this.xhrCbStart&&f.emit("xhr-cb-time",[a.now()-this.xhrCbStart,this.onload,n],n)})}},{}],11:[function(t,n,e){n.exports=function(t){var n=document.createElement("a"),e=window.location,r={};n.href=t,r.port=n.port;var o=n.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=n.hostname||e.hostname,r.pathname=n.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!n.protocol||":"===n.protocol||n.protocol===e.protocol,a=n.hostname===document.domain&&n.port===e.port;return r.sameOrigin=i&&(!n.hostname||a),r}},{}],12:[function(t,n,e){function r(){}function o(t,n,e){return function(){return i(t,[f.now()].concat(s(arguments)),n?null:this,e),n?void 0:this}}var i=t("handle"),a=t(16),s=t(17),c=t("ee").get("tracer"),f=t("loader"),u=NREUM;"undefined"==typeof window.newrelic&&(newrelic=u);var d=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",p=l+"ixn-";a(d,function(t,n){u[n]=o(l+n,!0,"api")}),u.addPageAction=o(l+"addPageAction",!0),u.setCurrentRouteName=o(l+"routeName",!0),n.exports=newrelic,u.interaction=function(){return(new r).get()};var h=r.prototype={createTracer:function(t,n){var e={},r=this,o="function"==typeof n;return i(p+"tracer",[f.now(),t,e],r),function(){if(c.emit((o?"":"no-")+"fn-start",[f.now(),r,o],e),o)try{return n.apply(this,arguments)}catch(t){throw c.emit("fn-err",[arguments,this,t],e),t}finally{c.emit("fn-end",[f.now()],e)}}}};a("actionText,setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,n){h[n]=o(p+n)}),newrelic.noticeError=function(t){"string"==typeof t&&(t=new Error(t)),i("err",[t,f.now()])}},{}],13:[function(t,n,e){n.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(n){return}}}},{}],14:[function(t,n,e){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),n.exports=r},{}],15:[function(t,n,e){function r(t,n){if(!o)return!1;if(t!==o)return!1;if(!n)return!0;if(!i)return!1;for(var e=i.split("."),r=n.split("."),a=0;a<r.length;a++)if(r[a]!==e[a])return!1;return!0}var o=null,i=null,a=/Version\/(\S+)\s+Safari/;if(navigator.userAgent){var s=navigator.userAgent,c=s.match(a);c&&s.indexOf("Chrome")===-1&&s.indexOf("Chromium")===-1&&(o="Safari",i=c[1])}n.exports={agent:o,version:i,match:r}},{}],16:[function(t,n,e){function r(t,n){var e=[],r="",i=0;for(r in t)o.call(t,r)&&(e[i]=n(r,t[r]),i+=1);return e}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],17:[function(t,n,e){function r(t,n,e){n||(n=0),"undefined"==typeof e&&(e=t?t.length:0);for(var r=-1,o=e-n||0,i=Array(o<0?0:o);++r<o;)i[r]=t[n+r];return i}n.exports=r},{}],18:[function(t,n,e){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],19:[function(t,n,e){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(17),a="nr@original",s=Object.prototype.hasOwnProperty,c=!1;n.exports=function(t,n){function e(t,n,e,o){function nrWrapper(){var r,a,s,c;try{a=this,r=i(arguments),s="function"==typeof e?e(r,a):e||{}}catch(f){l([f,"",[r,a,o],s])}u(n+"start",[r,a,o],s);try{return c=t.apply(a,r)}catch(d){throw u(n+"err",[r,a,d],s),d}finally{u(n+"end",[r,a,c],s)}}return r(t)?t:(n||(n=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,n,o,i){o||(o="");var a,s,c,f="-"===o.charAt(0);for(c=0;c<n.length;c++)s=n[c],a=t[s],r(a)||(t[s]=e(a,f?s+o:o,i,s))}function u(e,r,o){if(!c||n){var i=c;c=!0;try{t.emit(e,r,o,n)}catch(a){l([a,e,r,o])}c=i}}function d(t,n){if(Object.defineProperty&&Object.keys)try{var e=Object.keys(t);return e.forEach(function(e){Object.defineProperty(n,e,{get:function(){return t[e]},set:function(n){return t[e]=n,n}})}),n}catch(r){l([r])}for(var o in t)s.call(t,o)&&(n[o]=t[o]);return n}function l(n){try{t.emit("internal-error",n)}catch(e){}}return t||(t=o),e.inPlace=f,e.flag=a,e}},{}],ee:[function(t,n,e){function r(){}function o(t){function n(t){return t&&t instanceof r?t:t?c(t,s,i):i()}function e(e,r,o,i){if(!l.aborted||i){t&&t(e,r,o);for(var a=n(o),s=m(e),c=s.length,f=0;f<c;f++)s[f].apply(a,r);var d=u[g[e]];return d&&d.push([b,e,r,a]),a}}function p(t,n){y[t]=m(t).concat(n)}function h(t,n){var e=y[t];if(e)for(var r=0;r<e.length;r++)e[r]===n&&e.splice(r,1)}function m(t){return y[t]||[]}function v(t){return d[t]=d[t]||o(e)}function w(t,n){f(t,function(t,e){n=n||"feature",g[e]=n,n in u||(u[n]=[])})}var y={},g={},b={on:p,addEventListener:p,removeEventListener:h,emit:e,get:v,listeners:m,context:n,buffer:w,abort:a,aborted:!1};return b}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var s="nr@context",c=t("gos"),f=t(16),u={},d={},l=n.exports=o();l.backlog=u},{}],gos:[function(t,n,e){function r(t,n,e){if(o.call(t,n))return t[n];var r=e();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(t,n,e){function r(t,n,e,r){o.buffer([t],r),o.emit(t,n,e)}var o=t("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(t,n,e){function r(t){var n=typeof t;return!t||"object"!==n&&"function"!==n?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");n.exports=r},{}],loader:[function(t,n,e){function r(){if(!E++){var t=x.info=NREUM.info,n=p.getElementsByTagName("script")[0];if(setTimeout(u.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&n))return u.abort();f(g,function(n,e){t[n]||(t[n]=e)}),c("mark",["onload",a()+x.offset],null,"api");var e=p.createElement("script");e.src="https://"+t.agent,n.parentNode.insertBefore(e,n)}}function o(){"complete"===p.readyState&&i()}function i(){c("mark",["domContent",a()+x.offset],null,"api")}function a(){return O.exists&&performance.now?Math.round(performance.now()):(s=Math.max((new Date).getTime(),s))-x.offset}var s=(new Date).getTime(),c=t("handle"),f=t(16),u=t("ee"),d=t(15),l=window,p=l.document,h="addEventListener",m="attachEvent",v=l.XMLHttpRequest,w=v&&v.prototype;NREUM.o={ST:setTimeout,SI:l.setImmediate,CT:clearTimeout,XHR:v,REQ:l.Request,EV:l.Event,PR:l.Promise,MO:l.MutationObserver};var y=""+location,g={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1099.min.js"},b=v&&w&&w[h]&&!/CriOS/.test(navigator.userAgent),x=n.exports={offset:s,now:a,origin:y,features:{},xhrWrappable:b,userAgent:d};t(12),p[h]?(p[h]("DOMContentLoaded",i,!1),l[h]("load",r,!1)):(p[m]("onreadystatechange",o),l[m]("onload",r)),c("mark",["firstbyte",s],null,"api");var E=0,O=t(18)},{}]},{},["loader",2,10,4,3]);</script><title>Data Structures With JavaScript: Tree</title><link rel="canonical" href="https://code.tutsplus.com/articles/data-structures-with-javascript-tree--cms-23393"><link rel="shortcut icon" type="image/png" href="https://static.tutsplus.com/assets/favicon-9e8b377989d9949ad1003dc5298cd8ef.png"><link rel="apple-touch-icon" type="image/png" href="https://static.tutsplus.com/assets/apple-touch-icon-edce48c2c1293474a34fa8f1c87b5685.png"><script>window.Tutsplus = {};
Tutsplus.environment = 'production';
Tutsplus.recaptchaSiteKey = '6Lc_OAETAAAAABHaGkjvRfbPQizlpILv2YzeqTil';
Tutsplus.rollbarToken = '5b20f5bdb8ae402fb5bcfd50cc7f04a3';
Tutsplus.rollbarEnabled = true;
Tutsplus.ssoEnabled = true;
Tutsplus.ssoServer = 'https://account.envato.com';
Tutsplus.ssoSignInPath = '/sso/sign_in.json';
Tutsplus.resetPasswordPath = 'https://account.envato.com/reset_password?to=tutsplus';
Tutsplus.forcedResetPasswordPath = 'https://account.envato.com/password_reset_required?to=tutsplus';</script><!--[if lte IE 8]><link rel="stylesheet" media="screen" href="https://static.tutsplus.com/assets/ie8-9850b7f919e1b2b2d9d1a412d95bd6e3.css" /><script src="https://static.tutsplus.com/assets/modernizr.custom-980d665eeab47b43d57b6ce2c3e57284.js"></script><![endif]--><script>var PWT = {}; //Initialize Namespace
var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
var Criteo = Criteo || {};
    Criteo.events = Criteo.events || [];
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;</script><script async="async" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/gpt.js"></script><script async="async" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/publishertag.js"></script><script async="async" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/analytics.js"></script><script src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/application-7d4f5566b240ae42fd8cfba8c69fa92f.js"></script><link rel="alternate" type="application/atom+xml" title="Atom 1.0" href="https://tutsplus.com/posts.atom"><meta name="csrf-param" content="authenticity_token">
<meta name="csrf-token" content="YFGGQf0/QXv2q/3ZhqRINBZZXHOLQ3QllqzmWi0Iq3KmeyWArDp053GQaPilN6PUv4WajdpvV5OUHqNEsJl6gA=="><meta content="initial-scale=1" name="viewport"><meta content="index, follow" name="robots"><meta content="Data Structures With JavaScript: Tree" property="og:title"><meta content="Code Envato Tuts+" property="og:site_name"><meta content="1494084460809023" property="fb:app_id"><meta content="What You'll Be CreatingTrees are one of the most commonly used data structures in web development. This statement holds true for both developers and users. Every web developer who has written HTML..." name="description" property="og:description"><meta content="article" property="og:type"><meta content="https://code.tutsplus.com/articles/data-structures-with-javascript-tree--cms-23393" property="og:url"><meta content="true" property="native:billable"><meta content="2843" property="native:length"><meta property="native:priority"><link href="https://code.tutsplus.com/articles/data-structures-with-javascript-tree--cms-23393" hreflang="en" rel="alternate"><link href="https://code.tutsplus.com/ru/articles/data-structures-with-javascript-tree--cms-23393" hreflang="ru" rel="alternate"><link href="https://code.tutsplus.com/zh-hans/articles/data-structures-with-javascript-tree--cms-23393" hreflang="zh-hans" rel="alternate"><link href="https://code.tutsplus.com/zh-hant/articles/data-structures-with-javascript-tree--cms-23393" hreflang="zh-hant" rel="alternate"><meta content="https://cms-assets.tutsplus.com/uploads/users/34/posts/23393/preview_image/javascript-wide-retina-preview.png" property="og:image"><meta content="summary_large_image" name="twitter:card"><meta content="@tutsplus" name="twitter:site"><meta content="Data Structures With JavaScript: Tree" name="twitter:title"><meta content="What You'll Be CreatingTrees are one of the most commonly used data structures in web development. This statement holds true for both developers and users. Every web developer who has written HTML..." name="twitter:description"><meta content="https://cms-assets.tutsplus.com/uploads/users/34/posts/23393/preview_image/javascript-wide-retina-preview.png" name="twitter:image"><meta content="t60fIs6JfmiK5FpPBlh_bKr5lJSX6abJYYIFjqiFG3M" name="google-site-verification"><meta content="D3E35339A8EC086B14C62277CBEC8234" name="msvalidate.01"><meta content="zvqxFgQqdy" name="baidu-site-verification"><script src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/body-2f2427c2efde041ebda2820c7ceda664.js" async="async"></script><link href="https://bid.g.doubleclick.net/" rel="dns-prefetch"><link href="https://googleads.g.doubleclick.net/" rel="dns-prefetch"><link href="https://www.googletagservices.com/" rel="dns-prefetch"><link href="https://www.google-analytics.com/" rel="dns-prefetch"><link href="https://www.googleadservices.com/" rel="dns-prefetch"><link href="https://fonts.gstatic.com/" rel="dns-prefetch"><link href="https://ads.pubmatic.com/" rel="dns-prefetch"><link href="https://static.criteo.net/" rel="dns-prefetch"><link href="https://js-agent.newrelic.com/" rel="dns-prefetch"><script type="text/javascript" async="" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/embed.js"></script><script async="" type="text/javascript" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/count.js"></script><link rel="prefetch" as="style" href="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/a_data/lounge.css"><link rel="prefetch" as="script" href="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/a_data/common.js"><link rel="prefetch" as="script" href="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/a_data/lounge.js"><link rel="prefetch" as="script" href="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/a_data/config.js"></head><body class="page-body topic-code" data-ga-account="UA-11792865-37" data-ga-autolink-domains="activeden.net,audiojungle.net,themeforest.net,videohive.net,graphicriver.net,3docean.net,codecanyon.net,photodune.net,market.envato.com,market.styleguide.envato.com,elements.envato.com,build.envatohostedservices.com,author.envato.com,tutsplus.com,envato.com,business.tutsplus.com,design.tutsplus.com,code.tutsplus.com,webdesign.tutsplus.com,photography.tutsplus.com,music.tutsplus.com,cgi.tutsplus.com,gamedevelopment.tutsplus.com,computers.tutsplus.com,crafts.tutsplus.com" data-ga-domain="tutsplus.com" data-wt-dcsid="dcs222cpd4g6lg7wb3cum8l5g_6w6m"><div class="announcement-bar view announcement-bar--open view--loaded" data-announcement-id="header_nov2018" data-background-image="https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/15/topics/7/announcement_background_image/elements-bar-bg.jpg" data-fallback-background-color="#2a51b0" data-link-color="#2d2d2d" data-text-color="#ffffff" style="background-image: url(&quot;https://s3.amazonaws.com/cms-assets.tutsplus.com/uploads/users/15/topics/7/announcement_background_image/elements-bar-bg.jpg&quot;); background-size: inherit; background-color: rgb(42, 81, 176); color: rgb(255, 255, 255);"><div class="announcement-bar__content"><div class="announcement-bar__primary"><div class="announcement-bar__title"><div align="center">
    <span class="announcement-bar__title-desktop">
        <strong>Unlimited </strong>
         WordPress themes, graphics, videos &amp; courses!
    </span>
    <span class="announcement-bar__title-mobile">
        <strong>Unlimited asset downloads!</strong>
    </span>

    <a rel="noskim" href="https://elements.envato.com/pricing?utm_source=tutsplus.com&amp;utm_medium=promos&amp;utm_campaign=elements_tuts-header_nov2018" style="color: rgb(45, 45, 45);">From $16.50/m</a>
</div>

<style>

    .announcement-bar__title a {
        border-radius:4px;
        background-color:#FC9F97;
        padding:0px 20px;
        box-shadow:0px 0px 0px #FC9F97;
        margin:10px 10px 10px 10px;
        font-size:12px;
        letter-spacing:0.07em;
        height:30px;
        line-height:30px;
        text-decoration:none;
        color:#2d2d2d;
    }

    .announcement-bar__title a:hover {
        background-color: #ffd3d0;
        text-decoration:none;
    }

</style></div></div><div class="announcement-bar__secondary"><a title="Close this announcement bar" class="announcement-bar__close-link" href="javascript:" style="color: rgb(45, 45, 45);"><span class="announcement-bar__close-label">Dismiss</span><i class="fa fa-times announcement-bar__close-icon"></i></a></div></div></div><!--[if lt IE 10]><div class="legacy-ie-banner"><h2 class="legacy-ie-banner__title">Unsupported browser</h2><p class="legacy-ie-banner__text">This site was designed for modern browsers and tested with Internet Explorer version 10 and later. </p><p class="legacy-ie-banner__text">It may not look or work correctly on your browser. </p></div><![endif]--><nav class="global-nav view view--loaded"><div class="global-nav__mobile-overlay"></div><div class="global-nav__mobile"><section class="global-nav__mobile-search global-search view view--loaded"><form class="global-nav__search-form" action="https://code.tutsplus.com/tutorials/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="✓"><input type="text" name="search[terms]" id="search_terms" placeholder="Search Envato Tuts+" class="global-nav__mobile-search-terms"><button name="button" type="submit" class="global-nav__mobile-search-button"><i class="fa fa-search"></i></button></form></section><div class="global-nav__mobile-user-links"><a class="global-nav__mobile-user-link" href="https://tutsplus.com/subscribe-with-elements">Subscribe</a><a class="global-nav__mobile-user-link" href="https://tutsplus.com/sign_in?redirect_to=https%3A%2F%2Fcode.tutsplus.com%2Farticles%2Fdata-structures-with-javascript-tree--cms-23393">Sign In</a></div><ul class="global-nav__mobile-top-level"><li class="global-nav__mobile-top-level-item global-nav__mobile-top-level-item--expanded"><a class="global-nav__mobile-top-level-link global-nav__mobile-top-level-link-expandable" href="https://tutsplus.com/tutorials"><span class="global-nav__mobile-top-level-link-title">How-To Tutorials</span></a><a class="global-nav__mobile-top-level-link global-nav__mobile-top-level-expansion-link" href="#"><span class="global-nav__mobile-top-level-expand-text"><i class="fa fa-plus global-nav__mobile-top-level-link-icon"></i></span><span class="global-nav__mobile-top-level-collapse-text"><i class="fa fa-minus global-nav__mobile-top-level-link-icon"></i></span></a><ul class="global-nav__mobile-second-level"><li class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-design" href="https://design.tutsplus.com/tutorials">Design &amp; Illustration</a></li><li class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-code" href="https://code.tutsplus.com/tutorials">Code</a></li><li class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-webdesign" href="https://webdesign.tutsplus.com/tutorials">Web Design</a></li><li class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-photography" href="https://photography.tutsplus.com/tutorials">Photo &amp; Video</a></li><li class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-business" href="https://business.tutsplus.com/tutorials">Business</a></li><li class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-music" href="https://music.tutsplus.com/tutorials">Music &amp; Audio</a></li><li class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-cgi" href="https://cgi.tutsplus.com/tutorials">3D &amp; Motion Graphics</a></li><li class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-gamedevelopment" href="https://gamedevelopment.tutsplus.com/tutorials">Game Development</a></li><li class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-computers" href="https://computers.tutsplus.com/tutorials">Computer Skills</a></li></ul></li><li class="global-nav__mobile-top-level-item"><a class="global-nav__mobile-top-level-link global-nav__mobile-top-level-link-expandable" href="https://tutsplus.com/courses"><span class="global-nav__mobile-top-level-link-title">Courses</span></a><a class="global-nav__mobile-top-level-link global-nav__mobile-top-level-expansion-link" href="#"><span class="global-nav__mobile-top-level-expand-text"><i class="fa fa-plus global-nav__mobile-top-level-link-icon"></i></span><span class="global-nav__mobile-top-level-collapse-text"><i class="fa fa-minus global-nav__mobile-top-level-link-icon"></i></span></a><div class="global-nav__mobile-second-level"><div class="global-nav__mobile-second-level-item"></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-design" href="https://design.tutsplus.com/courses">Design &amp; Illustration</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-code" href="https://code.tutsplus.com/courses">Code</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-webdesign" href="https://webdesign.tutsplus.com/courses">Web Design</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-photography" href="https://photography.tutsplus.com/courses">Photo &amp; Video</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-business" href="https://business.tutsplus.com/courses">Business</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-music" href="https://music.tutsplus.com/courses">Music &amp; Audio</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-cgi" href="https://cgi.tutsplus.com/courses">3D &amp; Motion Graphics</a></div></div></li><li class="global-nav__mobile-top-level-item"><a class="global-nav__mobile-top-level-link global-nav__mobile-top-level-link-expandable" href="https://tutsplus.com/ebooks"><span class="global-nav__mobile-top-level-link-title">eBooks</span></a><a class="global-nav__mobile-top-level-link global-nav__mobile-top-level-expansion-link" href="#"><span class="global-nav__mobile-top-level-expand-text"><i class="fa fa-plus global-nav__mobile-top-level-link-icon"></i></span><span class="global-nav__mobile-top-level-collapse-text"><i class="fa fa-minus global-nav__mobile-top-level-link-icon"></i></span></a><div class="global-nav__mobile-second-level"><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-design" href="https://design.tutsplus.com/ebooks">Design &amp; Illustration</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-code" href="https://code.tutsplus.com/ebooks">Code</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-webdesign" href="https://webdesign.tutsplus.com/ebooks">Web Design</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-photography" href="https://photography.tutsplus.com/ebooks">Photo &amp; Video</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-business" href="https://business.tutsplus.com/ebooks">Business</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-music" href="https://music.tutsplus.com/ebooks">Music &amp; Audio</a></div><div class="global-nav__mobile-second-level-item"><a class="global-nav__mobile-second-level-topic-link topic-cgi" href="https://cgi.tutsplus.com/ebooks">3D &amp; Motion Graphics</a></div></div></li><li class="global-nav__mobile-top-level-item"><a class="global-nav__mobile-top-level-link" href="https://tutsplus.com/subscribe-with-elements">Pricing</a></li></ul><ul class="global-nav-mobile__envato-links"><li class="global-nav__mobile-top-level-item"><a class="global-mobile__header-item--envato-link" href="https://elements.envato.com/">Envato Elements</a></li><li class="global-nav__mobile-top-level-item"><a class="global-mobile__header-item--envato-link" href="https://studio.envato.com/">Envato Studio</a></li><li class="global-nav__mobile-top-level-item"><a class="global-mobile__header-item--envato-link" href="http://community.envato.com/">Community</a></li><li class="global-nav__mobile-top-level-item"><a class="global-mobile__header-item--envato-link" href="https://help.elements.envato.com/">Help</a></li></ul></div><div class="global-nav__header"><div class="global-nav__header-content"><div class="global-nav__header-top"><a class="global-nav__header-tuts-logo-link" href="https://tutsplus.com/"><img alt="envato-tuts+" class="global-nav__header-tuts-logo-image loading" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/tuts_logo-cf1e6fd0e5ca6cc573eb3cd0c94e16d7.svg" data-was-processed="true"></a><div class="global-nav__header-right"><ul class="global-nav__header-list"><li class="global-nav__header-item"><a class="global-nav__header-item--envato-link" href="https://elements.envato.com/?utm_campaign=elements_tuts-header_nav&amp;utm_medium=promos&amp;utm_source=tutsplus">Envato Elements</a></li><li class="global-nav__header-item"><a class="global-nav__header-item--envato-link" href="https://studio.envato.com/?utm_campaign=elements_tuts-header_nav&amp;utm_medium=promos&amp;utm_source=tutsplus">Envato Studio</a></li><li class="global-nav__header-item"><a class="global-nav__header-item--envato-link" href="http://community.envato.com/?utm_campaign=elements_tuts-header_nav&amp;utm_medium=promos&amp;utm_source=tutsplus">Community</a></li><li class="global-nav__header-item"><a class="global-nav__header-item--envato-link" href="https://forums.envato.com/c/project-making/envato-courses-and-tutorials?utm_campaign=elements_tuts-header_nav&amp;utm_medium=promos&amp;utm_source=tutsplus">Forum</a></li><li class="global-nav__header-item"><a class="global-nav__header-item--envato-link" href="https://help.elements.envato.com/">Help</a></li></ul><ul class="global-nav__header-buttons"><li class="global-nav__header-item"><a class="global-nav__header-item--internal-link global-nav__header-item--free-account-button" href="https://tutsplus.com/subscribe-with-elements">Subscribe</a></li><li class="global-nav__header-item"><a class="global-nav__header-item--sign-in-button global-nav__header-item--internal-link" rel="nofollow" href="https://tutsplus.com/sign_in?redirect_to=https%3A%2F%2Fcode.tutsplus.com%2Farticles%2Fdata-structures-with-javascript-tree--cms-23393">Sign In</a></li></ul></div></div><div class="global-nav__header-bottom"><ul class="global-nav__header-list"><li class="global-nav__header-item"><nav class="topics-menu view view--loaded" data-toggle=".topics-menu__dropdown-toggle"><a class="topics-menu__dropdown-toggle global-nav__header-link global-nav__header-link--primary global-nav__header-link--active" href="https://tutsplus.com/tutorials">How-To Tutorials<i class="fa fa-chevron-down"></i></a><ul class="topics-menu__topics topics-menu__topics--expanded"><li class="topics-menu__topic topic-design" data-slug="design"><a class="topics-menu__topic-link topic-design topics-menu__topic-link--active" href="https://design.tutsplus.com/tutorials">Design &amp; Illustration<i class="fa fa-chevron-right topics-menu__topic-link-chevron topics-menu__topic-link-chevron--active"></i></a><div class="topics-menu__topic-submenu topic-design topics-menu__topic-submenu--visible"><ul class="topics-menu__featured-categories"><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/adobe-photoshop">Adobe Photoshop</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/adobe-illustrator">Adobe Illustrator</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/drawing">Drawing</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/adobe-indesign">Adobe InDesign</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/photo-manipulation">Photo Manipulation</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/graphic-design">Graphic Design</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/text-effects">Text Effects</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/vector">Vector</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/photoshop-actions">Photoshop Actions</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-design hello" href="https://design.tutsplus.com/categories/icon-design">Icon Design</a></li></ul><a class="topics-menu__more-categories-link topic-design" href="https://design.tutsplus.com/categories">More Categories...</a><a class="topics-menu__submenu-footer-link topic-design" href="https://design.tutsplus.com/series">Learning Guides</a></div></li><li class="topics-menu__topic topic-code" data-slug="code"><a class="topics-menu__topic-link topic-code" href="https://code.tutsplus.com/tutorials">Code<i class="fa fa-chevron-right topics-menu__topic-link-chevron"></i></a><div class="topics-menu__topic-submenu topic-code"><ul class="topics-menu__featured-categories"><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/javascript">JavaScript</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/wordpress">WordPress</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/mobile-development">Mobile Development</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/php">PHP</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/laravel">Laravel</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/cms">CMS</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/swift">Swift</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/android-sdk">Android SDK</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/react">React</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-code hello" href="https://code.tutsplus.com/categories/angular-2">Angular 2+</a></li></ul><a class="topics-menu__more-categories-link topic-code" href="https://code.tutsplus.com/categories">More Categories...</a><a class="topics-menu__submenu-footer-link topic-code" href="https://code.tutsplus.com/series">Learning Guides</a></div></li><li class="topics-menu__topic topic-webdesign" data-slug="webdesign"><a class="topics-menu__topic-link topic-webdesign" href="https://webdesign.tutsplus.com/tutorials">Web Design<i class="fa fa-chevron-right topics-menu__topic-link-chevron"></i></a><div class="topics-menu__topic-submenu topic-webdesign"><ul class="topics-menu__featured-categories"><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/css">CSS</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/html-css">HTML &amp; CSS</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/animation">Animation</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/ui-design">UI Design</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/adobe-photoshop">Adobe Photoshop</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/sketch">Sketch</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/workflow">Workflow</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/design-theory">Design Theory</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/javascript">JavaScript</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-webdesign hello" href="https://webdesign.tutsplus.com/categories/ux">UX</a></li></ul><a class="topics-menu__more-categories-link topic-webdesign" href="https://webdesign.tutsplus.com/categories">More Categories...</a><a class="topics-menu__submenu-footer-link topic-webdesign" href="https://webdesign.tutsplus.com/series">Learning Guides</a></div></li><li class="topics-menu__topic topic-photography" data-slug="photography"><a class="topics-menu__topic-link topic-photography" href="https://photography.tutsplus.com/tutorials">Photo &amp; Video<i class="fa fa-chevron-right topics-menu__topic-link-chevron"></i></a><div class="topics-menu__topic-submenu topic-photography"><ul class="topics-menu__featured-categories"><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/photography">Photography</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/video">Video</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/editing">Editing</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/how-to">How-To</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/inspiration">Inspiration</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/lighting">Lighting</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/adobe-photoshop">Adobe Photoshop</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/adobe-after-effects">Adobe After Effects</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/adobe-premiere-pro">Adobe Premiere Pro</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-photography hello" href="https://photography.tutsplus.com/categories/adobe-lightroom">Adobe Lightroom</a></li></ul><a class="topics-menu__more-categories-link topic-photography" href="https://photography.tutsplus.com/categories">More Categories...</a><a class="topics-menu__submenu-footer-link topic-photography" href="https://photography.tutsplus.com/series">Learning Guides</a></div></li><li class="topics-menu__topic topic-business" data-slug="business"><a class="topics-menu__topic-link topic-business" href="https://business.tutsplus.com/tutorials">Business<i class="fa fa-chevron-right topics-menu__topic-link-chevron"></i></a><div class="topics-menu__topic-submenu topic-business"><ul class="topics-menu__featured-categories"><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/small-business">Small Business</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/entrepreneurship">Entrepreneurship</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/freelance">Freelance</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/careers">Careers</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/marketing">Marketing</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/finance">Finance</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/productivity">Productivity</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/planning">Planning</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/communication">Communication</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-business hello" href="https://business.tutsplus.com/categories/how-to">How-To</a></li></ul><a class="topics-menu__more-categories-link topic-business" href="https://business.tutsplus.com/categories">More Categories...</a><a class="topics-menu__submenu-footer-link topic-business" href="https://business.tutsplus.com/series">Learning Guides</a></div></li><li class="topics-menu__topic topic-music" data-slug="music"><a class="topics-menu__topic-link topic-music" href="https://music.tutsplus.com/tutorials">Music &amp; Audio<i class="fa fa-chevron-right topics-menu__topic-link-chevron"></i></a><div class="topics-menu__topic-submenu topic-music"><ul class="topics-menu__featured-categories"><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/audio-production">Audio Production</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/logic-pro">Logic Pro</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/general">General</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/mixing-mastering">Mixing &amp; Mastering</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/sound-design">Sound Design</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/workshops">Workshops</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/reason">Reason</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/recording">Recording</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/ableton-live">Ableton Live</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-music hello" href="https://music.tutsplus.com/categories/cubase">Cubase</a></li></ul><a class="topics-menu__more-categories-link topic-music" href="https://music.tutsplus.com/categories">More Categories...</a><a class="topics-menu__submenu-footer-link topic-music" href="https://music.tutsplus.com/series">Learning Guides</a></div></li><li class="topics-menu__topic topic-cgi" data-slug="cgi"><a class="topics-menu__topic-link topic-cgi" href="https://cgi.tutsplus.com/tutorials">3D &amp; Motion Graphics<i class="fa fa-chevron-right topics-menu__topic-link-chevron"></i></a><div class="topics-menu__topic-submenu topic-cgi"><ul class="topics-menu__featured-categories"><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/adobe-after-effects">Adobe After Effects</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/3d">3D</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/3d-studio-max">3D Studio Max</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/motion-graphics">Motion Graphics</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/maya">Maya</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/cinema-4d">Cinema 4D</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/workflow">Workflow</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/blender">Blender</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/visual-effects">Visual Effects</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-cgi hello" href="https://cgi.tutsplus.com/categories/roundups">Roundups</a></li></ul><a class="topics-menu__more-categories-link topic-cgi" href="https://cgi.tutsplus.com/categories">More Categories...</a><a class="topics-menu__submenu-footer-link topic-cgi" href="https://cgi.tutsplus.com/series">Learning Guides</a></div></li><li class="topics-menu__topic topic-gamedevelopment" data-slug="gamedevelopment"><a class="topics-menu__topic-link topic-gamedevelopment" href="https://gamedevelopment.tutsplus.com/tutorials">Game Development<i class="fa fa-chevron-right topics-menu__topic-link-chevron"></i></a><div class="topics-menu__topic-submenu topic-gamedevelopment"><ul class="topics-menu__featured-categories"><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/game-design">Game Design</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/platform-agnostic">Platform Agnostic</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/game-mechanics">Game Mechanics</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/business">Business</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/programming">Programming</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/game-art">Game Art</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/level-design">Level Design</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/from-scratch">From Scratch</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/unity">Unity</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-gamedevelopment hello" href="https://gamedevelopment.tutsplus.com/categories/html5">HTML5</a></li></ul><a class="topics-menu__more-categories-link topic-gamedevelopment" href="https://gamedevelopment.tutsplus.com/categories">More Categories...</a><a class="topics-menu__submenu-footer-link topic-gamedevelopment" href="https://gamedevelopment.tutsplus.com/series">Learning Guides</a></div></li><li class="topics-menu__topic topic-computers" data-slug="computers"><a class="topics-menu__topic-link topic-computers" href="https://computers.tutsplus.com/tutorials">Computer Skills<i class="fa fa-chevron-right topics-menu__topic-link-chevron"></i></a><div class="topics-menu__topic-submenu topic-computers"><ul class="topics-menu__featured-categories"><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/os-x">OS X</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/app-training">App Training</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/productivity">Productivity</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/how-to">How-To</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/tips-shortcuts">Tips &amp; Shortcuts</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/customization">Customization</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/automation">Automation</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/security">Security</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/hardware">Hardware</a></li><li class="topics-menu__featured-category"><a class="topics-menu__featured-category-link topic-computers hello" href="https://computers.tutsplus.com/categories/microsoft-powerpoint">Microsoft Powerpoint</a></li></ul><a class="topics-menu__more-categories-link topic-computers" href="https://computers.tutsplus.com/categories">More Categories...</a><a class="topics-menu__submenu-footer-link topic-computers" href="https://computers.tutsplus.com/series">Learning Guides</a></div></li></ul></nav></li><li class="global-nav__header-item"><nav class="courses-menu view" data-toggle=".courses-menu__dropdown-toggle"><a class="courses-menu__dropdown-toggle global-nav__header-link global-nav__header-link--primary " href="https://tutsplus.com/courses">Courses<i class="fa fa-chevron-down"></i></a><ul class="courses-menu__topics"><li class="courses-menu__topic topic-design" data-slug="design"><a class="courses-menu__topic-link topic-design" href="https://design.tutsplus.com/courses">Design &amp; Illustration</a></li><li class="courses-menu__topic topic-code" data-slug="code"><a class="courses-menu__topic-link topic-code" href="https://code.tutsplus.com/courses">Code</a></li><li class="courses-menu__topic topic-webdesign" data-slug="webdesign"><a class="courses-menu__topic-link topic-webdesign" href="https://webdesign.tutsplus.com/courses">Web Design</a></li><li class="courses-menu__topic topic-photography" data-slug="photography"><a class="courses-menu__topic-link topic-photography" href="https://photography.tutsplus.com/courses">Photo &amp; Video</a></li><li class="courses-menu__topic topic-business" data-slug="business"><a class="courses-menu__topic-link topic-business" href="https://business.tutsplus.com/courses">Business</a></li><li class="courses-menu__topic topic-music" data-slug="music"><a class="courses-menu__topic-link topic-music" href="https://music.tutsplus.com/courses">Music &amp; Audio</a></li><li class="courses-menu__topic topic-cgi" data-slug="cgi"><a class="courses-menu__topic-link topic-cgi" href="https://cgi.tutsplus.com/courses">3D &amp; Motion Graphics</a></li><li class="courses-menu__separator"></li><a class="courses-menu__topic-link courses-menu__upcoming-link" href="https://tutsplus.com/courses/upcoming">Coming Soon</a></ul></nav></li><li class="global-nav__header-item"><nav class="ebooks-menu view" data-toggle=".ebooks-menu__dropdown-toggle"><a class="ebooks-menu__dropdown-toggle global-nav__header-link global-nav__header-link--primary " href="https://tutsplus.com/ebooks">eBooks<i class="fa fa-chevron-down"></i></a><ul class="ebooks-menu__topics"><li class="ebooks-menu__topic topic-design" data-slug="design"><a class="ebooks-menu__topic-link topic-design" href="https://design.tutsplus.com/ebooks">Design &amp; Illustration</a></li><li class="ebooks-menu__topic topic-code" data-slug="code"><a class="ebooks-menu__topic-link topic-code" href="https://code.tutsplus.com/ebooks">Code</a></li><li class="ebooks-menu__topic topic-webdesign" data-slug="webdesign"><a class="ebooks-menu__topic-link topic-webdesign" href="https://webdesign.tutsplus.com/ebooks">Web Design</a></li><li class="ebooks-menu__topic topic-photography" data-slug="photography"><a class="ebooks-menu__topic-link topic-photography" href="https://photography.tutsplus.com/ebooks">Photo &amp; Video</a></li><li class="ebooks-menu__topic topic-business" data-slug="business"><a class="ebooks-menu__topic-link topic-business" href="https://business.tutsplus.com/ebooks">Business</a></li><li class="ebooks-menu__topic topic-music" data-slug="music"><a class="ebooks-menu__topic-link topic-music" href="https://music.tutsplus.com/ebooks">Music &amp; Audio</a></li><li class="ebooks-menu__topic topic-cgi" data-slug="cgi"><a class="ebooks-menu__topic-link topic-cgi" href="https://cgi.tutsplus.com/ebooks">3D &amp; Motion Graphics</a></li></ul></nav></li><li class="global-nav__header-item"><a class="global-nav__header-link" href="https://tutsplus.com/subscribe-with-elements">Pricing</a></li></ul><div class="global-nav__header-right"><div class="global-nav__search global-search view view--loaded"><form class="global-nav__search-form" action="https://code.tutsplus.com/tutorials/search" accept-charset="UTF-8" method="get"><input name="utf8" type="hidden" value="✓"><span class="twitter-typeahead" style="position: relative; display: inline-block; direction: ltr;"><input type="text" class="global-nav__search-terms tt-hint" style="position: absolute; top: 0px; left: 0px; border-color: transparent; box-shadow: none; opacity: 1; background: rgba(0, 0, 0, 0) none repeat scroll 0% 0%;" readonly="readonly" autocomplete="off" spellcheck="false" tabindex="-1"><input type="text" name="search[terms]" id="search_terms" placeholder="Search Envato Tuts+" class="global-nav__search-terms tt-input" autocomplete="off" spellcheck="false" style="position: relative; vertical-align: top; background-color: transparent;" dir="auto"><pre aria-hidden="true" style="position: absolute; visibility: hidden; white-space: pre; font-family: Arial, sans-serif; font-size: 14px; font-style: normal; font-variant: normal; font-weight: 400; word-spacing: 0px; letter-spacing: 0px; text-indent: 0px; text-rendering: optimizelegibility; text-transform: none;"></pre><span class="tt-dropdown-menu" style="position: absolute; top: 100%; left: 0px; z-index: 100; display: none; right: auto;"><div class="tt-dataset-search"></div></span></span><button name="button" type="submit" class="global-nav__search-button"><i class="fa fa-search"></i></button></form></div></div></div></div></div><div class="global-nav__mobile-toggle"><a class="global-nav__mobile-toggle-link" href="javascript:"><i class="fa fa-reorder"></i><i class="fa fa-times"></i></a></div></nav><div class="avert avert--leaderboard"><div class="avert__wrapper"><div class="avert__content" id="div-gpt-1391730982123-0"></div><div class="avert__content avert__criteo" id="ctr-1391730982123-0"></div><div class="avert__label">Advertisement</div></div></div><div class="page-content topic-code"><main class="content"><div class="content-banner"><div class="content-banner-restricted-width"><ol class="content-banner__content-breadcrumb topic-code"><li><a href="https://code.tutsplus.com/tutorials">Code</a></li><li><a href="https://code.tutsplus.com/categories/javascript">JavaScript</a></li></ol><div class="content-banner__icon"><img class="content-banner__title-icon loading" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/code-92f4d6cb84ab4ebc886f67060c059c44.svg" alt="Code" data-was-processed="true"></div><div class="content-banner__body"><h1 class="content-banner__title nolinks">Data Structures With JavaScript: Tree</h1></div></div></div><div class="content-title"></div><article class="post article view view--loaded"><div class="post__inarticle-ad-template" style="display: none"><div class="avert avert--inarticle"><div class="avert__wrapper"><div class="avert__content" id="div-gpt-1392179526912-0"></div><div class="avert__content avert__criteo" id="ctr-1392179526912-0"></div><div class="avert__label">Advertisement</div></div></div></div><div class="layout__content-with-sidebar"><div class="content-heading"><div class="content-heading__primary"><div class="content-heading__primary-authorship"><span class="content-heading__author">by <span class="content-heading__author-name"><a rel="author" href="https://tutsplus.com/authors/cho-kim">Cho S. Kim</a></span></span><time class="content-heading__publication-date" datetime="2015-09-24T12:00:01Z" title="24 Sep 2015">24 Sep 2015</time></div><div class="content-heading__primary-attributes"><span class="content-heading__item"><span class="content-heading__label">Length:</span><span class="content-heading__value">Long</span></span><span class="content-heading__item"><span class="content-heading__label">Languages:</span><select class="content-heading__value url-selector view view--loaded"><option data-url="/articles/data-structures-with-javascript-tree--cms-23393" value="en" selected="selected">English</option><option data-url="/ru/articles/data-structures-with-javascript-tree--cms-23393" value="ru">Pусский</option><option data-url="/zh-hans/articles/data-structures-with-javascript-tree--cms-23393" value="zh-hans">中文（简体）</option><option data-url="/zh-hant/articles/data-structures-with-javascript-tree--cms-23393" value="zh-hant">中文（繁體）</option></select></span></div></div><div class="content-heading__secondary"><div class="content-heading__secondary-categories"><a href="https://code.tutsplus.com/categories/javascript"><span class="content-heading__secondary-categories-tag">JavaScript</span></a><a href="https://code.tutsplus.com/categories/programming-fundamentals"><span class="content-heading__secondary-categories-tag">Programming Fundamentals</span></a></div><div class="content-heading__secondary-social"><span class="content-heading__comment-count"><a href="#post_comments"><i class="fa fa-comment"></i></a><div class="social-share-menu popup-menu view view--loaded"><a class="popup-menu-toggle drop-theme-arrows-bounce drop-target" href="javascript:"><i class="fa fa-share-alt"></i></a><div class="popup-menu-content"><ul class="social-share-menu__popup-menu-content"><li><a title="Share on Facebook" href="https://www.facebook.com/dialog/feed?app_id=1494084460809023&amp;link=https%3A%2F%2Fcode.tutsplus.com%2Farticles%2Fdata-structures-with-javascript-tree--cms-23393&amp;display=page&amp;name=Data%20Structures%20With%20JavaScript%3A%20Tree&amp;redirect_uri=https%3A%2F%2Fcode.tutsplus.com%2Farticles%2Fdata-structures-with-javascript-tree--cms-23393"><i class="fa fa-facebook-square"></i></a></li><li><a target="_blank" title="Share on Twitter" href="https://twitter.com/intent/tweet?text=Data%20Structures%20With%20JavaScript%3A%20Tree&amp;url=https%3A%2F%2Fcode.tutsplus.com%2Farticles%2Fdata-structures-with-javascript-tree--cms-23393&amp;via=tutsplus"><i class="fa fa-twitter"></i></a></li><li><a target="_blank" title="Share on Google+" href="https://plus.google.com/share?url=https%3A%2F%2Fcode.tutsplus.com%2Farticles%2Fdata-structures-with-javascript-tree--cms-23393"><i class="fa fa-google-plus"></i></a></li><li><a target="_blank" title="Pin on Pinterest" href="https://www.pinterest.com/pin/create/button/?url=https%3A%2F%2Fcode.tutsplus.com%2Farticles%2Fdata-structures-with-javascript-tree--cms-23393&amp;description=Data%20Structures%20With%20JavaScript%3A%20Tree&amp;media=https%3A%2F%2Fcms-assets.tutsplus.com%2Fuploads%2Fusers%2F34%2Fposts%2F23393%2Fpreview_image%2Fjavascript-wide-retina-preview.png"><i class="fa fa-pinterest"></i></a></li></ul></div></div></span></div></div></div><div class="post-body view view--loaded"><div class="post-body__series-navigation"><div class="post-body__series-navigation-description">This post is part of a series called <a href="https://code.tutsplus.com/series/data-structures-in-javascript--cms-772">Data Structures in JavaScript</a>.</div><div class="post-body__series-navigation-item"><a class="post-body__series-navigation-previous-link" href="https://code.tutsplus.com/articles/data-structures-with-javascript-singly-linked-list-and-doubly-linked-list--cms-23392">Data Structures With JavaScript: Singly-Linked List and Doubly-Linked List</a></div></div><div class="post-body__body"><script async="" charset="utf-8" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/widgets.js"></script><div class="post-body__content"><figure class="final-product final-product--image"><img data-src="https://cms-assets.tutsplus.com/uploads/users/423/posts/23393/final_image/data-structures-4-of-4.jpg" alt="Final product image" class="loaded" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/data-structures-4-of-4.jpg" data-was-processed="true"><figcaption>What You'll Be Creating</figcaption></figure><p>Trees
 are one of the most commonly used data structures in web development. 
This statement holds true for both developers and users. Every web 
developer who has written HTML and loaded it into a web browser has 
created a tree, which is referred to as the Document Object Model (DOM).
 Every user of the Internet who has, in turn, consumed information on 
the Internet has received it in the form of a tree—the DOM.&nbsp;<br></p><p>Now,
 here's the climax: The article that you are reading at this moment is 
rendered in your browser as a tree! The paragraph that you are reading 
is represented as text in a <code class="inline">&lt;p&gt;</code> element; the <code class="inline">&lt;p&gt;</code> element is nested inside a <code class="inline">&lt;body&gt;</code> element; and the <code class="inline">&lt;body&gt;</code> element is nested inside an <code class="inline">&lt;html&gt;</code> element.&nbsp;</p><p>The nesting of data is similar to a family tree. The <code class="inline">&lt;html&gt;</code> element is a parent, the <code class="inline">&lt;body&gt;</code> element is a child, and the <code class="inline">&lt;p&gt;</code> element is a child of the <code class="inline">&lt;body&gt;</code>
 element. If this analogy of a tree seems useful to you, then you will 
find comfort in knowing that more analogies will be used during our 
implementation of a tree.&nbsp;</p><p>In this article, we will create a 
tree using two different methods of tree traversal: Depth-First Search 
(DFS) and Breadth-First Search (BFS). (If the word traversal is 
unfamiliar to you, consider it to mean visiting every node of the tree.)
 Both of these types of traversals highlight different ways of 
interacting with a tree; both travels, moreover, incorporate the use of 
data structures that we've covered in this series. DFS uses a stack and 
BFS uses a queue to visit nodes. That's cool!</p><h2 class="nolinks">Tree (Depth-First Search and Breadth-First Search)<br>
</h2><p>In computer science, a tree is a data structure that simulates 
hierarchical data with nodes. Each node of a tree holds its own data and
 pointers to other nodes.</p><p>The terminology of nodes and pointers 
may be new to some readers, so let's describe them further with an 
analogy. Let's compare a tree to an organizational chart. The chart has a
 top-level position (root node), such as CEO. Directly underneath this 
position are other positions, such as vice president (VP).&nbsp;</p><p>To
 represent this relationship, we use arrows that point from the CEO to a
 VP. A position, such as the CEO, is a node; the relationship we create 
from a CEO to a VP is a pointer. To create more relationships in our 
organizational chart, we just repeat this process—we have a node point 
to another node.&nbsp;</p><p>On a conceptual level, I hope that nodes 
and pointers make sense. On a practical level, we can benefit from using
 a more technical example. Let's consider the DOM. A DOM has an <code class="inline">&lt;html&gt;</code> element as its top-level position (root node). This node points to a <code class="inline">&lt;head&gt;</code> element and a <code class="inline">&lt;body&gt;</code> element. This process is repeated for all nodes in the DOM.&nbsp;</p><p>One of the beauties of this design is the ability to nest nodes: a <code class="inline">&lt;ul&gt;</code> element, for instance, can have many&nbsp;<code class="inline">&lt;li&gt;</code> elements nested inside it; moreover, each <code class="inline">&lt;li&gt;</code> element can have sibling <code class="inline">&lt;li&gt;</code> nodes. That's weird, yet funny and true!</p><h3 class="nolinks">Operations of a Tree<br>
</h3><p>Since every tree contains nodes, which can be a separate 
constructor from a tree, we will outline the operations of both 
constructors: <code class="inline">Node</code> and <code class="inline">Tree</code>.<br></p><h4 class="nolinks">Node<br>
</h4><ul>
<li>
<code class="inline">data</code> stores a value.</li>
<li>
<code class="inline">parent</code> points to a node's parent.</li>
<li>
<code class="inline">children</code> points to the next node in the list.</li>
</ul><h4 class="nolinks">Tree<br>
</h4><ul>
<li>
<code class="inline">_root</code>&nbsp;points to the root node of a tree.</li>
<li>
<code class="inline">traverseDF(callback)</code>&nbsp;traverses nodes of a tree with DFS.</li>
<li>
<code class="inline">traverseBF(callback)</code>&nbsp;traverses nodes of a tree with BFS.</li>
<li>
<code class="inline">contains(data, traversal)</code>&nbsp;searches for a node in a tree.</li>
<li>
<code class="inline">add(data, toData, traverse)</code>&nbsp;adds a node to a tree.</li>
<li>
<code class="inline">remove(child, parent)</code>&nbsp;removes a node in a tree.&nbsp;</li>
</ul><h3 class="nolinks">Implementation of a Tree<br>
</h3><p>Now let's write the code for a tree!<br></p><h4 class="nolinks">Properties of a Node&nbsp;<br>
</h4><p>For our implementation, we will first define a function named <code class="inline">Node</code> and then a constructor named <code class="inline">Tree</code>.</p><div><div id="highlighter_980842" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript keyword">function</code> <code class="javascript plain">Node(data) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.data = data;</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.parent = </code><code class="javascript keyword">null</code><code class="javascript plain">;</code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.children = [];</code></div><div class="line number5 index4 alt2"><code class="javascript plain">}</code></div></div></td></tr></tbody></table></div></div><p>Every instance of Node contains three properties: <code class="inline">data</code>, <code class="inline">parent</code>, and <code class="inline">children</code>.&nbsp;The
 first property holds data associated with a node. The second property 
points to one node. The third property points to many children nodes.</p><h4 class="nolinks">Properties of a Tree<br>
</h4><p>Now, let's define our constructor for <code class="inline">Tree</code>, which includes the <code class="inline">Node</code>&nbsp;constructor in its definition:&nbsp;</p><div><div id="highlighter_844833" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript keyword">function</code> <code class="javascript plain">Tree(data) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">node = </code><code class="javascript keyword">new</code> <code class="javascript plain">Node(data);</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">._root = node;</code></div><div class="line number4 index3 alt1"><code class="javascript plain">}</code></div></div></td></tr></tbody></table></div></div><p><code class="inline">Tree</code> contains two lines of code. The first line creates a new instance of <code class="inline">Node</code>; the second line assigns <code class="inline">node</code> as the root of a tree.&nbsp;</p><p>The definitions of <code class="inline">Tree</code>&nbsp;and <code class="inline">Node</code>&nbsp;require
 only a few lines of code. These lines, however, are enough to help us 
simulate hierarchical data. To prove this point, let's use some example 
data to create an instance of <code class="inline">Tree</code> (and, indirectly, <code class="inline">Node</code>).</p><div><div id="highlighter_437724" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript keyword">var</code> <code class="javascript plain">tree = </code><code class="javascript keyword">new</code> <code class="javascript plain">Tree(</code><code class="javascript string">'CEO'</code><code class="javascript plain">);</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="javascript comments">// {data: 'CEO', parent: null, children: []}</code></div><div class="line number4 index3 alt1"><code class="javascript plain">tree._root;</code></div></div></td></tr></tbody></table></div></div><p>Thanks to the existence of <code class="inline">parent</code> and <code class="inline">children</code>, we can add nodes as children of <code class="inline">_root</code> and also assign <code class="inline">_root</code> as the parents of those nodes. In other words, we can simulate the creation of hierarchical data.&nbsp;</p><h4 class="nolinks">Methods of a Tree<br>
</h4><p>Next, we will create the following five methods:&nbsp;<br></p><p><strong>Tree</strong><br></p><ol>
<li><code class="inline">traverseDF(callback)</code></li>
<li><code class="inline">traverseBF(callback)</code></li>
<li><code class="inline">contains(data, traversal)</code></li>
<li><code class="inline">add(child, parent)</code></li>
<li><code class="inline">remove(node, parent)</code></li>
</ol><p>Since every method of a tree requires us to traverse a tree, we 
will first implement methods that define different types of tree 
traversal. (Traversing a tree is a formal way of saying visiting every 
node of a tree.)&nbsp;</p><p><strong>1 of 5: <code class="inline">traverseDF(callback)</code></strong><br></p><p>This method traverses a tree with depth-first search. &nbsp;</p><div><div id="highlighter_877668" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">Tree.prototype.traverseDF = </code><code class="javascript keyword">function</code><code class="javascript plain">(callback) {</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// this is a recurse and immediately-invoking function </code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">(</code><code class="javascript keyword">function</code> <code class="javascript plain">recurse(currentNode) {</code></div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// step 2</code></div><div class="line number6 index5 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">for</code> <code class="javascript plain">(</code><code class="javascript keyword">var</code> <code class="javascript plain">i = 0, length = currentNode.children.length; i &lt; length; i++) {</code></div><div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// step 3</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">recurse(currentNode.children[i]);</code></div><div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number10 index9 alt1">&nbsp;</div><div class="line number11 index10 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// step 4</code></div><div class="line number12 index11 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">callback(currentNode);</code></div><div class="line number13 index12 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number14 index13 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// step 1</code></div><div class="line number15 index14 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">})(</code><code class="javascript keyword">this</code><code class="javascript plain">._root);</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="javascript plain">};</code></div></div></td></tr></tbody></table></div></div><p><code class="inline">traverseDF(callback)</code> has a parameter named <code class="inline">callback</code>. If it's unclear from the name, <code class="inline">callback</code> is presumed to be a function, which will be called later in&nbsp;<code class="inline">traverseDF(callback)</code>.&nbsp;</p><p>The body of&nbsp;<code class="inline">traverseDF(callback)</code>&nbsp;includes another function named <code class="inline">recurse</code>.
 This function is a recursive&nbsp;function! In other words, it is 
self-invoking and self-terminating. Using the steps mentioned in the 
comments of <code class="inline">recurse</code>, I'll describe the general process that <code class="inline">recurse</code> uses to traverse the entire tree.&nbsp;</p><p>Here are the steps:&nbsp;</p><ol>
<li>Immediately invoke <code class="inline">recurse</code> with the root node of a tree as its argument. At this moment, <code class="inline">currentNode</code> points to the current node.&nbsp;</li>
<li>Enter a <code class="inline">for</code> loop and iterate once for each child of <code class="inline">currentNode</code>, beginning with the first child.&nbsp;</li>
<li>Inside the body of the <code class="inline">for</code> loop, invoke recurse with a child of <code class="inline">currentNode</code>. The exact child depends on the current iteration of the <code class="inline">for</code> loop.&nbsp;</li>
<li>When <code class="inline">currentNode</code> no longer has children, we exit the <code class="inline">for</code> loop and invoke the <code class="inline">callback</code> we passed during the invocation of&nbsp;<code class="inline">traverseDF(callback)</code>.&nbsp;</li>
</ol><p>Steps 2 (self-terminating), 3 (self-invoking), and 4 (callback) repeat until we traverse every node of a tree.&nbsp;<br></p><p>Recursion
 is a very hard topic to teach and requires an entire article to 
adequately explain it. Since the explanation of recursion isn't the 
focus of this article—the focus is implementing a tree—I'll suggest that
 any readers lacking a good grasp of recursion do the following two 
things.</p><p>First, experiment with our current implementation of&nbsp;<code class="inline">traverseDF(callback)</code>&nbsp;and
 try to understand to a degree how&nbsp;it works. Second, if you want me
 to write an article about recursion, then please request it in the 
comments of this article.</p><p>The following example demonstrates how a tree would be traversed with&nbsp;<code class="inline">traverseDF(callback)</code>.
 To traverse a&nbsp;tree, I'll create one in the example below. The 
approach that I will use at this moment isn't ideal, but it works. A 
better approach would be to use <code class="inline">add(value)</code>, which we will implement in step 4 of 5.&nbsp;</p><div><div id="highlighter_575185" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div><div class="line number29 index28 alt2">29</div><div class="line number30 index29 alt1">30</div><div class="line number31 index30 alt2">31</div><div class="line number32 index31 alt1">32</div><div class="line number33 index32 alt2">33</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript keyword">var</code> <code class="javascript plain">tree = </code><code class="javascript keyword">new</code> <code class="javascript plain">Tree(</code><code class="javascript string">'one'</code><code class="javascript plain">);</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="javascript plain">tree._root.children.push(</code><code class="javascript keyword">new</code> <code class="javascript plain">Node(</code><code class="javascript string">'two'</code><code class="javascript plain">));</code></div><div class="line number4 index3 alt1"><code class="javascript plain">tree._root.children[0].parent = tree;</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="javascript plain">tree._root.children.push(</code><code class="javascript keyword">new</code> <code class="javascript plain">Node(</code><code class="javascript string">'three'</code><code class="javascript plain">));</code></div><div class="line number7 index6 alt2"><code class="javascript plain">tree._root.children[1].parent = tree;</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="javascript plain">tree._root.children.push(</code><code class="javascript keyword">new</code> <code class="javascript plain">Node(</code><code class="javascript string">'four'</code><code class="javascript plain">));</code></div><div class="line number10 index9 alt1"><code class="javascript plain">tree._root.children[2].parent = tree;</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="javascript plain">tree._root.children[0].children.push(</code><code class="javascript keyword">new</code> <code class="javascript plain">Node(</code><code class="javascript string">'five'</code><code class="javascript plain">));</code></div><div class="line number13 index12 alt2"><code class="javascript plain">tree._root.children[0].children[0].parent = tree._root.children[0];</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="javascript plain">tree._root.children[0].children.push(</code><code class="javascript keyword">new</code> <code class="javascript plain">Node(</code><code class="javascript string">'six'</code><code class="javascript plain">));</code></div><div class="line number16 index15 alt1"><code class="javascript plain">tree._root.children[0].children[1].parent = tree._root.children[0];</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="javascript plain">tree._root.children[2].children.push(</code><code class="javascript keyword">new</code> <code class="javascript plain">Node(</code><code class="javascript string">'seven'</code><code class="javascript plain">));</code></div><div class="line number19 index18 alt2"><code class="javascript plain">tree._root.children[2].children[0].parent = tree._root.children[2];</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="javascript comments">/*</code></div><div class="line number22 index21 alt1">&nbsp;</div><div class="line number23 index22 alt2"><code class="javascript comments">creates this tree</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">one</code></div><div class="line number26 index25 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">├── two</code></div><div class="line number27 index26 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">│&nbsp;&nbsp; ├── five</code></div><div class="line number28 index27 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">│&nbsp;&nbsp; └── six</code></div><div class="line number29 index28 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">├── three</code></div><div class="line number30 index29 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">└── four</code></div><div class="line number31 index30 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">└── seven</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="javascript comments">*/</code></div></div></td></tr></tbody></table></div></div><p>Now, let's invoke <code class="inline">traverseDF(callback)</code>.</p><div><div id="highlighter_665373" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">tree.traverseDF(</code><code class="javascript keyword">function</code><code class="javascript plain">(node) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">console.log(node.data)</code></div><div class="line number3 index2 alt2"><code class="javascript plain">});</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="javascript comments">/*</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="javascript comments">logs the following strings to the console</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="javascript comments">'five'</code></div><div class="line number10 index9 alt1"><code class="javascript comments">'six'</code></div><div class="line number11 index10 alt2"><code class="javascript comments">'two'</code></div><div class="line number12 index11 alt1"><code class="javascript comments">'three'</code></div><div class="line number13 index12 alt2"><code class="javascript comments">'seven'</code></div><div class="line number14 index13 alt1"><code class="javascript comments">'four'</code></div><div class="line number15 index14 alt2"><code class="javascript comments">'one'</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="javascript comments">*/</code></div></div></td></tr></tbody></table></div></div><p><strong>2 of 5: <code class="inline">traverseBF(callback)</code></strong></p><p>This method uses breadth-first search to traverse a tree.&nbsp;</p><p>The
 difference between depth-first search and breadth-first search involves
 the sequence that nodes of a tree visit. To illustrate this point, 
let's use the tree we created from <code class="inline">traverseDF(callback)</code>.</p><div><div id="highlighter_920933" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript comments">/*</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">tree</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">one (depth: 0)</code></div><div class="line number6 index5 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">├── two (depth: 1)</code></div><div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">│&nbsp;&nbsp; ├── five (depth: 2)</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">│&nbsp;&nbsp; └── six (depth: 2)</code></div><div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">├── three (depth: 1)</code></div><div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">└── four (depth: 1)</code></div><div class="line number11 index10 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">└── seven (depth: 2)</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">*/</code></div></div></td></tr></tbody></table></div></div><p>Now, let's pass <code class="inline">traverseBF(callback)</code> the same callback we used for <code class="inline">traverseDF(callback)</code>.&nbsp;</p><div><div id="highlighter_642482" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">tree.traverseBF(</code><code class="javascript keyword">function</code><code class="javascript plain">(node) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">console.log(node.data)</code></div><div class="line number3 index2 alt2"><code class="javascript plain">});</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="javascript comments">/*</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="javascript comments">logs the following strings to the console</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="javascript comments">'one'</code></div><div class="line number10 index9 alt1"><code class="javascript comments">'two'</code></div><div class="line number11 index10 alt2"><code class="javascript comments">'three'</code></div><div class="line number12 index11 alt1"><code class="javascript comments">'four'</code></div><div class="line number13 index12 alt2"><code class="javascript comments">'five'</code></div><div class="line number14 index13 alt1"><code class="javascript comments">'six'</code></div><div class="line number15 index14 alt2"><code class="javascript comments">'seven'</code></div><div class="line number16 index15 alt1">&nbsp;</div><div class="line number17 index16 alt2"><code class="javascript comments">*/</code></div></div></td></tr></tbody></table></div></div><p>The
 logs from the console and the diagram of our tree reveal a pattern 
about breadth-first search. Start with the root node; then travel one 
depth and visit every node in that depth from left to right. Repeat this
 process until there are no more depths to travel.&nbsp;</p><p>Since we have a conceptual model of breadth-first search, let's now implement the code that would make our example work.&nbsp;</p><div><div id="highlighter_535173" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">Tree.prototype.traverseBF = </code><code class="javascript keyword">function</code><code class="javascript plain">(callback) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">queue = </code><code class="javascript keyword">new</code> <code class="javascript plain">Queue();</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code>&nbsp;</div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">queue.enqueue(</code><code class="javascript keyword">this</code><code class="javascript plain">._root);</code></div><div class="line number5 index4 alt2">&nbsp;</div><div class="line number6 index5 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">currentTree = queue.dequeue();</code></div><div class="line number7 index6 alt2">&nbsp;</div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">while</code><code class="javascript plain">(currentTree){</code></div><div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">for</code> <code class="javascript plain">(</code><code class="javascript keyword">var</code> <code class="javascript plain">i = 0, length = currentTree.children.length; i &lt; length; i++) {</code></div><div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">queue.enqueue(currentTree.children[i]);</code></div><div class="line number11 index10 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">callback(currentTree);</code></div><div class="line number14 index13 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">currentTree = queue.dequeue();</code></div><div class="line number15 index14 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number16 index15 alt1"><code class="javascript plain">};</code></div></div></td></tr></tbody></table></div></div><p>Our definition of <code class="inline">traverseBF(callback)</code> contains a lot of logic. For this reason, I'll explain the logic in manageable steps:&nbsp;</p><ol>
<li>Create an instance of <code class="inline">Queue</code>.</li>
<li>Add the node that invoked <code class="inline">traverseBF(callback)</code> to the instance of <code class="inline">Queue</code>.&nbsp;</li>
<li>Declare a variable named <code class="inline">currentNode</code> and initialize it to the <code class="inline">node</code> we just added to our queue.&nbsp;</li>
<li>While <code class="inline">currentNode</code> points to a node, execute the code inside the <code class="inline">while</code> loop.&nbsp;</li>
<li>Use a <code class="inline">for</code> loop to iterate on the children of <code class="inline">currentNode</code>.</li>
<li>Inside the body of the <code class="inline">for</code> loop, add every child to the queue.&nbsp;</li>
<li>Take <code class="inline">currentNode</code> and pass it as an argument of <code class="inline">callback</code>.&nbsp;</li>
<li>Reassign <code class="inline">currentNode</code> to the node being removed from the queue.&nbsp;</li>
<li>Until <code class="inline">currentNode</code> does not point to a node—every node in the tree has been visited—repeat steps 4 to 8.</li>
</ol><p><strong>3 of 5: <code class="inline">contains(callback, traversal)</code></strong><br></p><p>Let's
 define a method that will allow us to search for a particular value in 
our tree. To use either of our methods of tree traversal, I've 
defined&nbsp;<code class="inline">contains(callback, traversal)</code>&nbsp;to accept two arguments: the data to search and&nbsp;the type of traversal.&nbsp;</p><div><div id="highlighter_375341" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">Tree.prototype.contains = </code><code class="javascript keyword">function</code><code class="javascript plain">(callback, traversal) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">traversal.call(</code><code class="javascript keyword">this</code><code class="javascript plain">, callback);</code></div><div class="line number3 index2 alt2"><code class="javascript plain">};</code></div></div></td></tr></tbody></table></div></div><p>In the body of&nbsp;<code class="inline">contains(callback, traversal)</code>, we use a method named <code class="inline">call</code> to pass <code class="inline">this</code> and <code class="inline">callback</code>. The first&nbsp;argument binds <code class="inline">traversal</code>&nbsp;to the tree that invoked&nbsp;<code class="inline">contains(callback, traversal)</code>; the&nbsp;second argument is a function that is invoked on every node in our tree.&nbsp;</p><p>Imagine
 that we want to log to the console any nodes that contain data with an 
odd number and&nbsp;traverse every node in our tree with BFS. This is 
the code we would write:</p><div><div id="highlighter_811740" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">1</div><div class="line number2 index1 alt1">2</div><div class="line number3 index2 alt2">3</div><div class="line number4 index3 alt1">4</div><div class="line number5 index4 alt2">5</div><div class="line number6 index5 alt1">6</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript comments">// tree is an example of a root node</code></div><div class="line number2 index1 alt1"><code class="javascript plain">tree.contains(</code><code class="javascript keyword">function</code><code class="javascript plain">(node){</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(node.data === </code><code class="javascript string">'two'</code><code class="javascript plain">) {</code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">console.log(node);</code></div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number6 index5 alt1"><code class="javascript plain">}, tree.traverseBF);</code></div></div></td></tr></tbody></table></div></div><p><strong>4 of 5: <code class="inline">add(data, toData, traversal)</code></strong></p><p>We
 now have a method to search for a specific node in our tree. Let's now 
define a method that will enable us to add a node to a specific node. 
&nbsp;</p><div><div id="highlighter_407480" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">Tree.prototype.add = </code><code class="javascript keyword">function</code><code class="javascript plain">(data, toData, traversal) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">child = </code><code class="javascript keyword">new</code> <code class="javascript plain">Node(data),</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent = </code><code class="javascript keyword">null</code><code class="javascript plain">,</code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">callback = </code><code class="javascript keyword">function</code><code class="javascript plain">(node) {</code></div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(node.data === toData) {</code></div><div class="line number6 index5 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent = node;</code></div><div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">};</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.contains(callback, traversal);</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(parent) {</code></div><div class="line number13 index12 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent.children.push(child);</code></div><div class="line number14 index13 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">child.parent = parent;</code></div><div class="line number15 index14 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">} </code><code class="javascript keyword">else</code> <code class="javascript plain">{</code></div><div class="line number16 index15 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">throw</code> <code class="javascript keyword">new</code> <code class="javascript plain">Error(</code><code class="javascript string">'Cannot add node to a non-existent parent.'</code><code class="javascript plain">);</code></div><div class="line number17 index16 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number18 index17 alt1"><code class="javascript plain">};</code></div></div></td></tr></tbody></table></div></div><p><code class="inline">add(data, toData, traversal)</code>&nbsp;defines three parameters. The first parameter, <code class="inline">data</code>, is used to create a new instance of <code class="inline">Node</code>. The second parameter, <code class="inline">toData</code>, is used to compare against every node in a tree. The third parameter, <code class="inline">traversal</code>, is the type of tree traversal used in this method.&nbsp;</p><p>In the body of&nbsp;<code class="inline">add(data, toData, traversal)</code>, we declare three variables. The first variable, <code class="inline">child</code>, is initialized as a new&nbsp;instance of <code class="inline">Node</code>. The second variable, <code class="inline">parent</code>, is initialized as <code class="inline">null</code>; but it will later point to any node in a tree that matches the value of <code class="inline">toData</code>. The reassignment of <code class="inline">parent</code> happens in the third variable we declare, which is <code class="inline">callback</code>.&nbsp;</p><p><code class="inline">callback</code> is a function that compares <code class="inline">toData</code> to every node's <code class="inline">data</code> property. If the <code class="inline">if</code> statement evaluates to <code class="inline">true</code>, then <code class="inline">parent</code> is assigned to the node that matched the comparison in the <code class="inline">if</code> statement.&nbsp;</p><p>The actual comparison of every node to <code class="inline">toData</code>&nbsp;occurs in&nbsp;<code class="inline">contains(callback, traversal)</code>. The type of traversal&nbsp;and <code class="inline">callback</code> must be passed as arguments of&nbsp;<code class="inline">contains(callback, traversal)</code>.&nbsp;</p><p>Finally, if <code class="inline">parent</code> does exist in the tree, we push <code class="inline">child</code> into <code class="inline">parent.children</code>; we also assign <code class="inline">parent</code> to the parent of <code class="inline">child</code>. Else,&nbsp;we throw an error.&nbsp;</p><p>Let's use&nbsp;<code class="inline">add(data, toData, traversal)</code>&nbsp;in an example:&nbsp;</p><div><div id="highlighter_433629" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript keyword">var</code> <code class="javascript plain">tree = </code><code class="javascript keyword">new</code> <code class="javascript plain">Tree(</code><code class="javascript string">'CEO'</code><code class="javascript plain">);</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="javascript plain">tree.add(</code><code class="javascript string">'VP of Happiness'</code><code class="javascript plain">, </code><code class="javascript string">'CEO'</code><code class="javascript plain">, tree.traverseBF);</code></div><div class="line number4 index3 alt1">&nbsp;</div><div class="line number5 index4 alt2"><code class="javascript comments">/*</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="javascript comments">our tree</code></div><div class="line number8 index7 alt1">&nbsp;</div><div class="line number9 index8 alt2"><code class="javascript comments">'CEO'</code></div><div class="line number10 index9 alt1"><code class="javascript comments">└── 'VP of Happiness'</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="javascript comments">*/</code></div></div></td></tr></tbody></table></div></div><p>Here's a more complex example of&nbsp;<code class="inline">add(addData, toData, traversal)</code>:&nbsp;</p><div><div id="highlighter_765362" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript keyword">var</code> <code class="javascript plain">tree = </code><code class="javascript keyword">new</code> <code class="javascript plain">Tree(</code><code class="javascript string">'CEO'</code><code class="javascript plain">);</code></div><div class="line number2 index1 alt1">&nbsp;</div><div class="line number3 index2 alt2"><code class="javascript plain">tree.add(</code><code class="javascript string">'VP of Happiness'</code><code class="javascript plain">, </code><code class="javascript string">'CEO'</code><code class="javascript plain">, tree.traverseBF);</code></div><div class="line number4 index3 alt1"><code class="javascript plain">tree.add(</code><code class="javascript string">'VP of Finance'</code><code class="javascript plain">, </code><code class="javascript string">'CEO'</code><code class="javascript plain">, tree.traverseBF);</code></div><div class="line number5 index4 alt2"><code class="javascript plain">tree.add(</code><code class="javascript string">'VP of Sadness'</code><code class="javascript plain">, </code><code class="javascript string">'CEO'</code><code class="javascript plain">, tree.traverseBF);</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="javascript plain">tree.add(</code><code class="javascript string">'Director of Puppies'</code><code class="javascript plain">, </code><code class="javascript string">'VP of Finance'</code><code class="javascript plain">, tree.traverseBF);</code></div><div class="line number8 index7 alt1"><code class="javascript plain">tree.add(</code><code class="javascript string">'Manager of Puppies'</code><code class="javascript plain">, </code><code class="javascript string">'Director of Puppies'</code><code class="javascript plain">, tree.traverseBF);</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="javascript comments">/*</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">tree</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">'CEO'</code></div><div class="line number15 index14 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">├── 'VP of Happiness'</code></div><div class="line number16 index15 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">├── 'VP of Finance'</code></div><div class="line number17 index16 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">│&nbsp;&nbsp; ├── 'Director of Puppies'</code></div><div class="line number18 index17 alt1"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">│&nbsp;&nbsp; └── 'Manager of Puppies'</code></div><div class="line number19 index18 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">└── 'VP of Sadness'</code></div><div class="line number20 index19 alt1">&nbsp;</div><div class="line number21 index20 alt2"><code class="javascript spaces">&nbsp;</code><code class="javascript comments">*/</code></div></div></td></tr></tbody></table></div></div><p><strong>5 of 5: <code class="inline">remove(data, fromData, traversal)</code></strong></p><p>To complete our implementation of <code class="inline">Tree</code>, we will add a method named&nbsp;<code class="inline">remove(data, fromData, traversal)</code>. Similar to&nbsp;removing a node from the DOM, this method will remove a node and all of its children.</p><div><div id="highlighter_238810" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div><div class="line number12 index11 alt1">12</div><div class="line number13 index12 alt2">13</div><div class="line number14 index13 alt1">14</div><div class="line number15 index14 alt2">15</div><div class="line number16 index15 alt1">16</div><div class="line number17 index16 alt2">17</div><div class="line number18 index17 alt1">18</div><div class="line number19 index18 alt2">19</div><div class="line number20 index19 alt1">20</div><div class="line number21 index20 alt2">21</div><div class="line number22 index21 alt1">22</div><div class="line number23 index22 alt2">23</div><div class="line number24 index23 alt1">24</div><div class="line number25 index24 alt2">25</div><div class="line number26 index25 alt1">26</div><div class="line number27 index26 alt2">27</div><div class="line number28 index27 alt1">28</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript plain">Tree.prototype.remove = </code><code class="javascript keyword">function</code><code class="javascript plain">(data, fromData, traversal) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">tree = </code><code class="javascript keyword">this</code><code class="javascript plain">,</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent = </code><code class="javascript keyword">null</code><code class="javascript plain">,</code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">childToRemove = </code><code class="javascript keyword">null</code><code class="javascript plain">,</code></div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">index;</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">callback = </code><code class="javascript keyword">function</code><code class="javascript plain">(node) {</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(node.data === fromData) {</code></div><div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent = node;</code></div><div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number11 index10 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">};</code></div><div class="line number12 index11 alt1">&nbsp;</div><div class="line number13 index12 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.contains(callback, traversal);</code></div><div class="line number14 index13 alt1">&nbsp;</div><div class="line number15 index14 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(parent) {</code></div><div class="line number16 index15 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">index = findIndex(parent.children, data);</code></div><div class="line number17 index16 alt2">&nbsp;</div><div class="line number18 index17 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(index === undefined) {</code></div><div class="line number19 index18 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">throw</code> <code class="javascript keyword">new</code> <code class="javascript plain">Error(</code><code class="javascript string">'Node to remove does not exist.'</code><code class="javascript plain">);</code></div><div class="line number20 index19 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">} </code><code class="javascript keyword">else</code> <code class="javascript plain">{</code></div><div class="line number21 index20 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">childToRemove = parent.children.splice(index, 1);</code></div><div class="line number22 index21 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number23 index22 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">} </code><code class="javascript keyword">else</code> <code class="javascript plain">{</code></div><div class="line number24 index23 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">throw</code> <code class="javascript keyword">new</code> <code class="javascript plain">Error(</code><code class="javascript string">'Parent does not exist.'</code><code class="javascript plain">);</code></div><div class="line number25 index24 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number26 index25 alt1">&nbsp;</div><div class="line number27 index26 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">return</code> <code class="javascript plain">childToRemove;</code></div><div class="line number28 index27 alt1"><code class="javascript plain">};</code></div></div></td></tr></tbody></table></div></div><p>Similar to&nbsp;<code class="inline">add(data, toData, traversal)</code>, remove traverses a tree to find a node that contains the second argument,&nbsp;which is now <code class="inline">fromData</code>. If this node is found, then <code class="inline">parent</code> points to it.&nbsp;</p><p>At this moment, we reach our first <code class="inline">if</code> statement. If <code class="inline">parent</code> does not exist, we throw an error. If <code class="inline">parent</code> does exist, we invoke <code class="inline">findIndex()</code> with <code class="inline">parent.children</code> and the data we want to remove from the children nodes of <code class="inline">parent</code>. (<code class="inline">findIndex()</code> is a helper method that I defined below.)</p><div><div id="highlighter_545008" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">01</div><div class="line number2 index1 alt1">02</div><div class="line number3 index2 alt2">03</div><div class="line number4 index3 alt1">04</div><div class="line number5 index4 alt2">05</div><div class="line number6 index5 alt1">06</div><div class="line number7 index6 alt2">07</div><div class="line number8 index7 alt1">08</div><div class="line number9 index8 alt2">09</div><div class="line number10 index9 alt1">10</div><div class="line number11 index10 alt2">11</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript keyword">function</code> <code class="javascript plain">findIndex(arr, data) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">index;</code></div><div class="line number3 index2 alt2">&nbsp;</div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">for</code> <code class="javascript plain">(</code><code class="javascript keyword">var</code> <code class="javascript plain">i = 0; i &lt; arr.length; i++) {</code></div><div class="line number5 index4 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(arr[i].data === data) {</code></div><div class="line number6 index5 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">index = i;</code></div><div class="line number7 index6 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number9 index8 alt2">&nbsp;</div><div class="line number10 index9 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">return</code> <code class="javascript plain">index;</code></div><div class="line number11 index10 alt2"><code class="javascript plain">}</code></div></div></td></tr></tbody></table></div></div><p>Inside&nbsp;<code class="inline">findIndex()</code>, the following logic occurs. If any of the nodes in <code class="inline">parent.children</code> contain data that match <code class="inline">data</code>, the variable <code class="inline">index</code> is assigned an integer. If none of the children's data properties match <code class="inline">data</code>, then <code class="inline">index</code> retains its default value of <code class="inline">undefined</code>. On the last line of <code class="inline">findIndex()</code>, we return <code class="inline">index</code>.&nbsp;</p><p>We now return to <code class="inline">remove(data, fromData, traversal)</code>. If <code class="inline">index</code> is <code class="inline">undefined</code>, an error is thrown. If <code class="inline">index</code> is defined, we use it to splice the node we want to remove from the children of <code class="inline">parent</code>; we also assign the removed child to <code class="inline">childToRemove</code>.&nbsp;</p><p>Finally, we return <code class="inline">childToRemove</code>.&nbsp;</p><h3 class="nolinks">Complete Implementation of a Tree<br>
</h3><p>Our implementation of <code class="inline">Tree</code> is complete. Take a look—we've accomplished a lot:&nbsp;</p><div><div id="highlighter_465692" class="syntaxhighlighter  javascript"><table cellspacing="0" cellpadding="0" border="0"><tbody><tr><td class="gutter"><div class="line number1 index0 alt2">001</div><div class="line number2 index1 alt1">002</div><div class="line number3 index2 alt2">003</div><div class="line number4 index3 alt1">004</div><div class="line number5 index4 alt2">005</div><div class="line number6 index5 alt1">006</div><div class="line number7 index6 alt2">007</div><div class="line number8 index7 alt1">008</div><div class="line number9 index8 alt2">009</div><div class="line number10 index9 alt1">010</div><div class="line number11 index10 alt2">011</div><div class="line number12 index11 alt1">012</div><div class="line number13 index12 alt2">013</div><div class="line number14 index13 alt1">014</div><div class="line number15 index14 alt2">015</div><div class="line number16 index15 alt1">016</div><div class="line number17 index16 alt2">017</div><div class="line number18 index17 alt1">018</div><div class="line number19 index18 alt2">019</div><div class="line number20 index19 alt1">020</div><div class="line number21 index20 alt2">021</div><div class="line number22 index21 alt1">022</div><div class="line number23 index22 alt2">023</div><div class="line number24 index23 alt1">024</div><div class="line number25 index24 alt2">025</div><div class="line number26 index25 alt1">026</div><div class="line number27 index26 alt2">027</div><div class="line number28 index27 alt1">028</div><div class="line number29 index28 alt2">029</div><div class="line number30 index29 alt1">030</div><div class="line number31 index30 alt2">031</div><div class="line number32 index31 alt1">032</div><div class="line number33 index32 alt2">033</div><div class="line number34 index33 alt1">034</div><div class="line number35 index34 alt2">035</div><div class="line number36 index35 alt1">036</div><div class="line number37 index36 alt2">037</div><div class="line number38 index37 alt1">038</div><div class="line number39 index38 alt2">039</div><div class="line number40 index39 alt1">040</div><div class="line number41 index40 alt2">041</div><div class="line number42 index41 alt1">042</div><div class="line number43 index42 alt2">043</div><div class="line number44 index43 alt1">044</div><div class="line number45 index44 alt2">045</div><div class="line number46 index45 alt1">046</div><div class="line number47 index46 alt2">047</div><div class="line number48 index47 alt1">048</div><div class="line number49 index48 alt2">049</div><div class="line number50 index49 alt1">050</div><div class="line number51 index50 alt2">051</div><div class="line number52 index51 alt1">052</div><div class="line number53 index52 alt2">053</div><div class="line number54 index53 alt1">054</div><div class="line number55 index54 alt2">055</div><div class="line number56 index55 alt1">056</div><div class="line number57 index56 alt2">057</div><div class="line number58 index57 alt1">058</div><div class="line number59 index58 alt2">059</div><div class="line number60 index59 alt1">060</div><div class="line number61 index60 alt2">061</div><div class="line number62 index61 alt1">062</div><div class="line number63 index62 alt2">063</div><div class="line number64 index63 alt1">064</div><div class="line number65 index64 alt2">065</div><div class="line number66 index65 alt1">066</div><div class="line number67 index66 alt2">067</div><div class="line number68 index67 alt1">068</div><div class="line number69 index68 alt2">069</div><div class="line number70 index69 alt1">070</div><div class="line number71 index70 alt2">071</div><div class="line number72 index71 alt1">072</div><div class="line number73 index72 alt2">073</div><div class="line number74 index73 alt1">074</div><div class="line number75 index74 alt2">075</div><div class="line number76 index75 alt1">076</div><div class="line number77 index76 alt2">077</div><div class="line number78 index77 alt1">078</div><div class="line number79 index78 alt2">079</div><div class="line number80 index79 alt1">080</div><div class="line number81 index80 alt2">081</div><div class="line number82 index81 alt1">082</div><div class="line number83 index82 alt2">083</div><div class="line number84 index83 alt1">084</div><div class="line number85 index84 alt2">085</div><div class="line number86 index85 alt1">086</div><div class="line number87 index86 alt2">087</div><div class="line number88 index87 alt1">088</div><div class="line number89 index88 alt2">089</div><div class="line number90 index89 alt1">090</div><div class="line number91 index90 alt2">091</div><div class="line number92 index91 alt1">092</div><div class="line number93 index92 alt2">093</div><div class="line number94 index93 alt1">094</div><div class="line number95 index94 alt2">095</div><div class="line number96 index95 alt1">096</div><div class="line number97 index96 alt2">097</div><div class="line number98 index97 alt1">098</div><div class="line number99 index98 alt2">099</div><div class="line number100 index99 alt1">100</div><div class="line number101 index100 alt2">101</div><div class="line number102 index101 alt1">102</div><div class="line number103 index102 alt2">103</div><div class="line number104 index103 alt1">104</div><div class="line number105 index104 alt2">105</div><div class="line number106 index105 alt1">106</div><div class="line number107 index106 alt2">107</div><div class="line number108 index107 alt1">108</div><div class="line number109 index108 alt2">109</div></td><td class="code"><div class="container"><div class="line number1 index0 alt2"><code class="javascript keyword">function</code> <code class="javascript plain">Node(data) {</code></div><div class="line number2 index1 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.data = data;</code></div><div class="line number3 index2 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.parent = </code><code class="javascript keyword">null</code><code class="javascript plain">;</code></div><div class="line number4 index3 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.children = [];</code></div><div class="line number5 index4 alt2"><code class="javascript plain">}</code></div><div class="line number6 index5 alt1">&nbsp;</div><div class="line number7 index6 alt2"><code class="javascript keyword">function</code> <code class="javascript plain">Tree(data) {</code></div><div class="line number8 index7 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">node = </code><code class="javascript keyword">new</code> <code class="javascript plain">Node(data);</code></div><div class="line number9 index8 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">._root = node;</code></div><div class="line number10 index9 alt1"><code class="javascript plain">}</code></div><div class="line number11 index10 alt2">&nbsp;</div><div class="line number12 index11 alt1"><code class="javascript plain">Tree.prototype.traverseDF = </code><code class="javascript keyword">function</code><code class="javascript plain">(callback) {</code></div><div class="line number13 index12 alt2">&nbsp;</div><div class="line number14 index13 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// this is a recurse and immediately-invoking function</code></div><div class="line number15 index14 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">(</code><code class="javascript keyword">function</code> <code class="javascript plain">recurse(currentNode) {</code></div><div class="line number16 index15 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// step 2</code></div><div class="line number17 index16 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">for</code> <code class="javascript plain">(</code><code class="javascript keyword">var</code> <code class="javascript plain">i = 0, length = currentNode.children.length; i &lt; length; i++) {</code></div><div class="line number18 index17 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// step 3</code></div><div class="line number19 index18 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">recurse(currentNode.children[i]);</code></div><div class="line number20 index19 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number21 index20 alt2">&nbsp;</div><div class="line number22 index21 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// step 4</code></div><div class="line number23 index22 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">callback(currentNode);</code></div><div class="line number24 index23 alt1">&nbsp;</div><div class="line number25 index24 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript comments">// step 1</code></div><div class="line number26 index25 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">})(</code><code class="javascript keyword">this</code><code class="javascript plain">._root);</code></div><div class="line number27 index26 alt2">&nbsp;</div><div class="line number28 index27 alt1"><code class="javascript plain">};</code></div><div class="line number29 index28 alt2">&nbsp;</div><div class="line number30 index29 alt1"><code class="javascript plain">Tree.prototype.traverseBF = </code><code class="javascript keyword">function</code><code class="javascript plain">(callback) {</code></div><div class="line number31 index30 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">queue = </code><code class="javascript keyword">new</code> <code class="javascript plain">Queue();</code></div><div class="line number32 index31 alt1">&nbsp;</div><div class="line number33 index32 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">queue.enqueue(</code><code class="javascript keyword">this</code><code class="javascript plain">._root);</code></div><div class="line number34 index33 alt1">&nbsp;</div><div class="line number35 index34 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">currentTree = queue.dequeue();</code></div><div class="line number36 index35 alt1">&nbsp;</div><div class="line number37 index36 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">while</code><code class="javascript plain">(currentTree){</code></div><div class="line number38 index37 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">for</code> <code class="javascript plain">(</code><code class="javascript keyword">var</code> <code class="javascript plain">i = 0, length = currentTree.children.length; i &lt; length; i++) {</code></div><div class="line number39 index38 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">queue.enqueue(currentTree.children[i]);</code></div><div class="line number40 index39 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number41 index40 alt2">&nbsp;</div><div class="line number42 index41 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">callback(currentTree);</code></div><div class="line number43 index42 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">currentTree = queue.dequeue();</code></div><div class="line number44 index43 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number45 index44 alt2"><code class="javascript plain">};</code></div><div class="line number46 index45 alt1">&nbsp;</div><div class="line number47 index46 alt2"><code class="javascript plain">Tree.prototype.contains = </code><code class="javascript keyword">function</code><code class="javascript plain">(callback, traversal) {</code></div><div class="line number48 index47 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">traversal.call(</code><code class="javascript keyword">this</code><code class="javascript plain">, callback);</code></div><div class="line number49 index48 alt2"><code class="javascript plain">};</code></div><div class="line number50 index49 alt1">&nbsp;</div><div class="line number51 index50 alt2"><code class="javascript plain">Tree.prototype.add = </code><code class="javascript keyword">function</code><code class="javascript plain">(data, toData, traversal) {</code></div><div class="line number52 index51 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">child = </code><code class="javascript keyword">new</code> <code class="javascript plain">Node(data),</code></div><div class="line number53 index52 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent = </code><code class="javascript keyword">null</code><code class="javascript plain">,</code></div><div class="line number54 index53 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">callback = </code><code class="javascript keyword">function</code><code class="javascript plain">(node) {</code></div><div class="line number55 index54 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(node.data === toData) {</code></div><div class="line number56 index55 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent = node;</code></div><div class="line number57 index56 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number58 index57 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">};</code></div><div class="line number59 index58 alt2">&nbsp;</div><div class="line number60 index59 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.contains(callback, traversal);</code></div><div class="line number61 index60 alt2">&nbsp;</div><div class="line number62 index61 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(parent) {</code></div><div class="line number63 index62 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent.children.push(child);</code></div><div class="line number64 index63 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">child.parent = parent;</code></div><div class="line number65 index64 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">} </code><code class="javascript keyword">else</code> <code class="javascript plain">{</code></div><div class="line number66 index65 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">throw</code> <code class="javascript keyword">new</code> <code class="javascript plain">Error(</code><code class="javascript string">'Cannot add node to a non-existent parent.'</code><code class="javascript plain">);</code></div><div class="line number67 index66 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number68 index67 alt1"><code class="javascript plain">};</code></div><div class="line number69 index68 alt2">&nbsp;</div><div class="line number70 index69 alt1"><code class="javascript plain">Tree.prototype.remove = </code><code class="javascript keyword">function</code><code class="javascript plain">(data, fromData, traversal) {</code></div><div class="line number71 index70 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">tree = </code><code class="javascript keyword">this</code><code class="javascript plain">,</code></div><div class="line number72 index71 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent = </code><code class="javascript keyword">null</code><code class="javascript plain">,</code></div><div class="line number73 index72 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">childToRemove = </code><code class="javascript keyword">null</code><code class="javascript plain">,</code></div><div class="line number74 index73 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">index;</code></div><div class="line number75 index74 alt2">&nbsp;</div><div class="line number76 index75 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">callback = </code><code class="javascript keyword">function</code><code class="javascript plain">(node) {</code></div><div class="line number77 index76 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(node.data === fromData) {</code></div><div class="line number78 index77 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">parent = node;</code></div><div class="line number79 index78 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number80 index79 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">};</code></div><div class="line number81 index80 alt2">&nbsp;</div><div class="line number82 index81 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">this</code><code class="javascript plain">.contains(callback, traversal);</code></div><div class="line number83 index82 alt2">&nbsp;</div><div class="line number84 index83 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(parent) {</code></div><div class="line number85 index84 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">index = findIndex(parent.children, data);</code></div><div class="line number86 index85 alt1">&nbsp;</div><div class="line number87 index86 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(index === undefined) {</code></div><div class="line number88 index87 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">throw</code> <code class="javascript keyword">new</code> <code class="javascript plain">Error(</code><code class="javascript string">'Node to remove does not exist.'</code><code class="javascript plain">);</code></div><div class="line number89 index88 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">} </code><code class="javascript keyword">else</code> <code class="javascript plain">{</code></div><div class="line number90 index89 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">childToRemove = parent.children.splice(index, 1);</code></div><div class="line number91 index90 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number92 index91 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">} </code><code class="javascript keyword">else</code> <code class="javascript plain">{</code></div><div class="line number93 index92 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">throw</code> <code class="javascript keyword">new</code> <code class="javascript plain">Error(</code><code class="javascript string">'Parent does not exist.'</code><code class="javascript plain">);</code></div><div class="line number94 index93 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number95 index94 alt2">&nbsp;</div><div class="line number96 index95 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">return</code> <code class="javascript plain">childToRemove;</code></div><div class="line number97 index96 alt2"><code class="javascript plain">};</code></div><div class="line number98 index97 alt1">&nbsp;</div><div class="line number99 index98 alt2"><code class="javascript keyword">function</code> <code class="javascript plain">findIndex(arr, data) {</code></div><div class="line number100 index99 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">var</code> <code class="javascript plain">index;</code></div><div class="line number101 index100 alt2">&nbsp;</div><div class="line number102 index101 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">for</code> <code class="javascript plain">(</code><code class="javascript keyword">var</code> <code class="javascript plain">i = 0; i &lt; arr.length; i++) {</code></div><div class="line number103 index102 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">if</code> <code class="javascript plain">(arr[i].data === data) {</code></div><div class="line number104 index103 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">index = i;</code></div><div class="line number105 index104 alt2"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number106 index105 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript plain">}</code></div><div class="line number107 index106 alt2">&nbsp;</div><div class="line number108 index107 alt1"><code class="javascript spaces">&nbsp;&nbsp;&nbsp;&nbsp;</code><code class="javascript keyword">return</code> <code class="javascript plain">index;</code></div><div class="line number109 index108 alt2"><code class="javascript plain">}</code></div></div></td></tr></tbody></table></div></div><h2 class="nolinks">Conclusion&nbsp;</h2><p>Trees
 simulate hierarchical data. Much of the world around us resembles this 
type of hierarchy, such as web pages and our families. Any time you find
 yourself in need of structuring data with hierarchy, consider using a 
tree.&nbsp;<br></p></div></div></div>  <!-- PUBLIFT ADSENSE START -->
  <div class="avert avert--publift">
    <script async="" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/adsbygoogle.js"></script>
    <div class="avert__wrapper">
      <ins class="avert__content avert--publift-inset adsbygoogle" data-ad-client="ca-pub-9093712935949486" data-ad-slot="5326059481" data-max-num-ads="1" data-override-format="true" data-partner="Publift" data-partner-url="www.publift.com">
       </ins>
       <div class="avert__label">
         Advertisement
       </div>
    </div>
    <script>
      (adsbygoogle = window.adsbygoogle || []).push({});
    </script>
  </div>
  <!-- PUBLIFT ADSENSE END -->
<div class="content-author"><a href="https://tutsplus.com/authors/cho-kim"><div class="content-author__header"><img class="content-author__image loading" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/profile_thumbnail.jpg" alt="Profile thumbnail" data-was-processed="true"><div class="content-author__name">Cho S. Kim</div><div class="content-author__title">San Francisco, CA</div></div><div class="content-author__bio">Cho
 is a full-stack web-application developer. He dislikes mean people but 
likes the MEAN stack (MongoDB, ExpressJS, AngularJS, Node.js). During a 
typical week, he'll be coding in JavaScript, writing about JavaScript, 
or watching movies NOT about JavaScript. </div></a><div class="content-author__twitter"><a href="https://tutsplus.com/authors/cho-kim"></a><a href="https://twitter.com/choskim"><i class="fa fa-twitter"></i>choskim</a></div></div></div><div class="layout__sidebar"><ul class="social-links"><li class="social-links__item social-links__item--feed"><a class="social-links__link social-links__link--feed" href="https://code.tutsplus.com/categories/javascript.atom"><i class="icon fa fa-rss social-links__icon"></i>Feed </a></li><li class="social-links__item social-links__item--facebook"><a class="social-links__link social-links__link--facebook" href="http://facebook.com/nettutsplus"><i class="icon fa fa-facebook-square social-links__icon"></i>Like </a></li><li class="social-links__item social-links__item--twitter"><a class="social-links__link social-links__link--twitter" href="http://twitter.com/TutsPlusCode"><i class="icon fa fa-twitter social-links__icon"></i>Follow </a></li><li class="social-links__item social-links__item--google-plus"><a class="social-links__link social-links__link--google-plus" href="https://plus.google.com/100395074731712398322"><i class="icon fa fa-google-plus social-links__icon"></i>Follow </a></li></ul><div class="post__sidebar"><div class="post__sidebar-primary"><div class="weekly-digest-subscription"><div class="weekly-digest-subscription--header">Weekly email summary</div>Subscribe
 below and we’ll send you a weekly email summary of all new Code 
tutorials. Never miss out on learning about the next big thing.<form class="weekly-digest-subscription__form" id="new_weekly_digest_subscription_request" action="/weekly_digest_subscription_requests" accept-charset="UTF-8" method="post"><input name="utf8" type="hidden" value="✓"><input type="hidden" name="authenticity_token" value="YFGGQf0/QXv2q/3ZhqRINBZZXHOLQ3QllqzmWi0Iq3KmeyWArDp053GQaPilN6PUv4WajdpvV5OUHqNEsJl6gA=="><input placeholder="Email Address" class="weekly-digest-subscription__email-field" type="email" name="weekly_digest_subscription_request[email]" id="weekly_digest_subscription_request_email"><button name="button" type="submit" class="weekly-digest-subscription__subscribe-button">Update me weekly</button></form></div><div class="avert"><div class="avert__wrapper"><div class="avert__content" id="div-gpt-1379650391729-0"></div><div class="avert__content avert__criteo" id="ctr-1379650391729-0"></div><div class="avert__label">Advertisement</div></div></div></div><div class="post__sidebar-secondary"><div class="post__sidebar-resource-links"><a href="https://github.com/tutsplus/data-structures">View on GitHub </a></div><div class="post-translate"><div class="post-translate-heading">Translations</div><p>Envato Tuts+ tutorials are translated into other languages by our community members—you can be involved too!</p><a class="post-translate-button" href="https://getnative.me/?ref=tutsplus&amp;lang=en&amp;url=https://code.tutsplus.com/articles/data-structures-with-javascript-tree--cms-23393&amp;title=Data%20Structures%20With%20JavaScript%3A%20Tree&amp;splitMode=1">Translate this post</a><div class="post-translate-by">Powered by<img class="post-translate-by-image loading" title="Native" alt="Native logo" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/native-logo-26829f74cf5fa5fd085cd64c24df4c50.png" data-was-processed="true"></div></div><div class="avert--sticky-target tether-target tether-enabled tether-abutted tether-abutted-left tether-element-attached-left tether-target-attached-left tether-element-attached-top tether-target-attached-top tether-out-of-bounds tether-out-of-bounds-bottom"></div></div></div></div></article><footer class="post__footer"><div class="layout__content-with-sidebar"><div class="post__comments" id="post_comments" name="post_comments"><div id="disqus_thread" name="disqus_thread"><iframe id="dsq-app3215" name="dsq-app3215" allowtransparency="true" scrolling="no" tabindex="0" title="Disqus" style="width: 1px !important; min-width: 100% !important; border: medium none !important; overflow: hidden !important; height: 5607px !important;" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/a.htm" horizontalscrolling="no" verticalscrolling="no" width="100%" frameborder="0"></iframe></div><script>var disqus_category_id = "3496021";</script><script>var disqus_shortname  = "tutshub";
var disqus_identifier = "23393";
var disqus_title      = "Data Structures With JavaScript: Tree";
var disqus_url        = "https://code.tutsplus.com/articles/data-structures-with-javascript-tree--cms-23393";
var disqus_config     = function() {
    this.language = "en";
};

(function() {
    var dsq = document.createElement('script'); dsq.type = 'text/javascript'; dsq.async = true;
    dsq.src = '//' + disqus_shortname + '.disqus.com/embed.js';
    (document.getElementsByTagName('head')[0] || document.getElementsByTagName('body')[0]).appendChild(dsq);
})();

(function () {
  var s = document.createElement('script'); s.async = true;
  s.type = 'text/javascript';
  s.src = '//' + disqus_shortname + '.disqus.com/count.js';
  (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);
}());</script></div></div><div class="layout__sidebar"><div class="avert"><div class="avert__wrapper"><div class="avert__content" id="div-gpt-1379650407131-0"></div><div class="avert__content avert__criteo" id="ctr-1379650407131-0"></div><div class="avert__label">Advertisement</div></div></div></div></footer></main><div class="market-highlight market-highlight--padded-bottom"><div class="market-highlight__heading"><div class="market-highlight__intro">Looking for something to help kick start your next project?</div><div class="market-highlight__title"><a href="https://themeforest.net/?ec_unit=market_highlight">Envato Market</a> has a range of items for sale to help get you started.</div></div><div class="market-highlight__cards"><div class="market-highlight__card"><a href="https://codecanyon.net/category/wordpress?ec_unit=market_highlight"><img class="market-highlight__card-image" data-src="https://static.tutsplus.com/assets/market/code/wordpressplugin-7f1dd47155c415eca57446774b224ec4.png"><div class="market-highlight__card-content"><div class="market-highlight__card-title">WordPress Plugins</div><div class="market-highlight__card-description">From $5</div></div></a></div><div class="market-highlight__card"><a href="https://codecanyon.net/category/php-scripts?ec_unit=market_highlight"><img class="market-highlight__card-image" data-src="https://static.tutsplus.com/assets/market/code/php_script-4741ed2bae7195fd7d74053caf84174d.png"><div class="market-highlight__card-content"><div class="market-highlight__card-title">PHP Scripts</div><div class="market-highlight__card-description">From $5</div></div></a></div><div class="market-highlight__card"><a href="https://codecanyon.net/category/javascript?ec_unit=market_highlight"><img class="market-highlight__card-image" data-src="https://static.tutsplus.com/assets/market/code/javascript-b89862766072bc1ca0cffabf89aae971.png"><div class="market-highlight__card-content"><div class="market-highlight__card-title">JavaScript</div><div class="market-highlight__card-description">From $3</div></div></a></div><div class="market-highlight__card"><a href="https://codecanyon.net/category/mobile?ec_unit=market_highlight"><img class="market-highlight__card-image" data-src="https://static.tutsplus.com/assets/market/code/mobile-9ae75987b25adf065cb964b223f0fd5d.png"><div class="market-highlight__card-content"><div class="market-highlight__card-title">Mobile App Templates</div><div class="market-highlight__card-description">From $5</div></div></a></div></div></div></div><div class="ecosystem-highlight"><div class="ecosystem-highlight__cards"><div class="ecosystem-highlight__card"><a href="https://elements.envato.com/?ec_unit=ecosystem_highlight&amp;utm_campaign=elements_tuts-ecosystem-promo_&amp;utm_medium=promos&amp;utm_source=tutsplus"><img class="ecosystem-highlight__card-image" data-src="https://static.tutsplus.com/assets/ecosystem/Elements-8d12ebd8ef7a8c6a1fd035134c4011f9.png"><div class="ecosystem-highlight__card-content"><div class="ecosystem-highlight__card-title">Unlimited Downloads<br>From $16.50/month</div><div class="ecosystem-highlight__card-description">Get access to over 400,000 creative assets on Envato Elements.</div></div></a></div><div class="ecosystem-highlight__card"><a href="https://themeforest.net/?ec_unit=ecosystem_highlight&amp;utm_campaign=elements_tuts-ecosystem-promo_&amp;utm_medium=promos&amp;utm_source=tutsplus"><img class="ecosystem-highlight__card-image" data-src="https://static.tutsplus.com/assets/ecosystem/Market-7e6b77007d2f2e3158f3c3279a77a143.png"><div class="ecosystem-highlight__card-content"><div class="ecosystem-highlight__card-title"> Over 9 Million Digital Assets</div><div class="ecosystem-highlight__card-description"> Everything you need for your next creative project.</div></div></a></div><div class="ecosystem-highlight__card"><a href="https://placeit.net/?ec_unit=ecosystem_highlight&amp;utm_campaign=placeit_mkt-footer&amp;utm_content=tuts_global-footer&amp;utm_medium=promos&amp;utm_source=tutsplus.com"><img class="ecosystem-highlight__card-image" data-src="https://static.tutsplus.com/assets/ecosystem/Placeit-4b64744fed7e0608004dca545150dd77.png"><div class="ecosystem-highlight__card-content"><div class="ecosystem-highlight__card-title"> Create Beautiful Logos, Designs <br> &amp; Mockups in Seconds</div><div class="ecosystem-highlight__card-description"> Design like a professional without Photoshop.</div></div></a></div><div class="ecosystem-highlight__card"><a href="http://community.envato.com/?ec_unit=ecosystem_highlight&amp;utm_campaign=elements_tuts-ecosystem-promo_&amp;utm_medium=promos&amp;utm_source=tutsplus"><img class="ecosystem-highlight__card-image" data-src="https://static.tutsplus.com/assets/ecosystem/Community-e18375bc04b26732cbe441eb1c736937.png"><div class="ecosystem-highlight__card-content"><div class="ecosystem-highlight__card-title"> Join the Community</div><div class="ecosystem-highlight__card-description"> Share ideas. Host meetups. Lead discussions. Collaborate.</div></div></a></div></div></div><div class="quick-links view quick-links__collapsed view--loaded"><div class="quick-links__container"><div class="quick-links__title"><div class="quick-links__toggle js-quick-links__toggle"><i class="quick-links__toggle-icon"></i><span class="quick-links__toggle-text">Quick Links</span><span class="quick-links__toggle-subtext">Explore popular categories</span></div></div><div class="quick-links__content"><ul class="quick-links__list"><li class="quick-links__list-title">Web Themes &amp; Templates</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://themeforest.net/category/wordpress">WP Themes</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://themeforest.net/category/site-templates">HTML Templates</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://themeforest.net/category/ecommerce/shopify">Shopify Themes</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://themeforest.net/tags/bootstrap">Bootstrap Themes</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://themeforest.net/free/wordpress-themes">Free WordPress Themes</a></li></ul><ul class="quick-links__list"><li class="quick-links__list-title">Video</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://videohive.net/category/after-effects-project-files">After Effects Templates</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://videohive.net/category/apple-motion-templates">Apple Motion Templates</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://videohive.net/tags/effects">Video Effects</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://videohive.net/category/motion-graphics/lower-thirds">Lower Thirds</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://videohive.net/category/stock-footage">Stock Footage</a></li></ul><ul class="quick-links__list"><li class="quick-links__list-title">Audio</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://audiojungle.net/category/music">Royalty Free Music</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://audiojungle.net/category/sound">Sound Effects</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://audiojungle.net/popular_item/by_category?category=music">Best Selling Royalty Free Music</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://audiojungle.net/category/source-files/logic-pro">Logic Pro Files</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://audiojungle.net/tags/background">Background Music</a></li></ul><ul class="quick-links__list"><li class="quick-links__list-title">Code</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://codecanyon.net/category/wordpress">WordPress Plugins</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://codecanyon.net/category/php-scripts">PHP Script</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://codecanyon.net/category/javascript">JavaScript</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://codecanyon.net/category/css">CSS Templates</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://codecanyon.net/category/plugins/prestashop">PrestaShop Plugins</a></li></ul><ul class="quick-links__list"><li class="quick-links__list-title">Graphics</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://graphicriver.net/logo-templates">Logo Templates</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://graphicriver.net/print-templates/business-cards">Business Card Templates</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://graphicriver.net/add-ons/lightroom-presets">Lightroom Presets</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://graphicriver.net/fonts/serif">Serif Fonts</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://graphicriver.net/fonts/sans-serif">Sans-serif Fonts</a></li></ul><ul class="quick-links__list"><li class="quick-links__list-title">Photos</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://photodune.net/tags/food">Food Stock Photos</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://photodune.net/tags/animals">Animal Stock Photos</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://photodune.net/tags/technology">Tech Stock Photos</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://photodune.net/tags/fitness,sports#content">Fitness Stock Photos</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://photodune.net/tags/nature,travel#content">Nature Stock Photos</a></li></ul><ul class="quick-links__list"><li class="quick-links__list-title">Design Maker</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://placeit.net/c/logos?utm_medium=promos&amp;utm_source=tutsquicklinks&amp;utm_campaign=placeit_tuts-quicklinks&amp;utm_content=logo_quick-links">Logo Maker</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://placeit.net/c/design-templates/?f_devices=business%20card%20maker&amp;h=36&amp;utm_medium=promos&amp;utm_source=tutsquicklinks&amp;utm_campaign=placeit_tuts-quicklinks&amp;utm_content=buscard_quick-links">Business Card Maker</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://placeit.net/c/design-templates/?f_devices=t-shirt%20design&amp;h=35&amp;utm_medium=promos&amp;utm_source=tutsquicklinks&amp;utm_campaign=placeit_tuts-quicklinks&amp;utm_content=tshirt-maker_quick-links">T-Shirt Maker</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://placeit.net/tshirt-mockup-generator?utm_medium=promos&amp;utm_source=tutsquicklinks&amp;utm_campaign=placeit_tuts-quicklinks&amp;utm_content=tshirt-mockup_quick-links">T-Shirt Mockups</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://placeit.net/c/mockups/?f_devices=iphone&amp;h=10&amp;utm_medium=promos&amp;utm_source=tutsquicklinks&amp;utm_campaign=placeit_tuts-quicklinks&amp;utm_content=iphone_quick-links">iPhone Mockups</a></li></ul><ul class="quick-links__list"><li class="quick-links__list-title">3D Files</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://3docean.net/category/3d-models">3D Renders</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://3docean.net/category/3d-models/vehicles/land/cars">3D  Car Models</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://3docean.net/category/materials-and-shaders">3D Shaders</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://3docean.net/category/cg-textures">CG Textures</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://3docean.net/search?file_formats=obj">OBJ Files</a></li></ul><ul class="quick-links__list"><li class="quick-links__list-title">Elements</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://elements.envato.com/wordpress/themes">WordPress Themes</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://elements.envato.com/photos">Stock Images</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://elements.envato.com/web-templates/site-templates">Website Templates</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://elements.envato.com/graphic-templates/logos">Logos</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://elements.envato.com/fonts">Fonts</a></li></ul><ul class="quick-links__list"><li class="quick-links__list-title">Tuts+</li><li class="quick-links__list-item"><a class="quick-links__link" href="https://code.tutsplus.com/">Learn Code</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://design.tutsplus.com/tutorials">Learn Graphic Design</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://business.tutsplus.com/tutorials">Learn Business</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://photography.tutsplus.com/categories/photography">Learn Photography</a></li><li class="quick-links__list-item"><a class="quick-links__link" href="https://code.tutsplus.com/ebooks/search/Cryptocurrencies">CryptoCurrency Tutorials &amp; Ebooks</a></li></ul></div></div></div><footer class="page-footer view view--loaded"><div class="page-footer__content"><div class="page-footer__links-column"><div class="page-footer__section page-footer__section--first"><div class="page-footer__heading">Envato Tuts+</div><a class="page-footer__links-column-expansion-link" href="javascript:void(0);"><span class="page-footer__links-column-expansion-link-expand-text"><i class="fa fa-plus page-footer__links-column-link-icon"></i></span><span class="page-footer__links-column-expansion-link-collapse-text"><i class="fa fa-minus page-footer__links-column-link-icon"></i></span></a><div class="page-footer__item"><a class="page-footer__link" href="https://tutsplus.com/about">About Envato Tuts+</a></div><div class="page-footer__item"><a class="page-footer__link" href="https://tutsplus.com/terms-of-use">Terms of Use</a></div><div class="page-footer__item"><a class="page-footer__link" href="https://tutsplus.com/advertise">Advertise</a></div></div></div><div class="page-footer__links-column"><div class="page-footer__section page-footer__section--first"><div class="page-footer__heading">Join our Community</div><a class="page-footer__links-column-expansion-link" href="javascript:void(0);"><span class="page-footer__links-column-expansion-link-expand-text"><i class="fa fa-plus page-footer__links-column-link-icon"></i></span><span class="page-footer__links-column-expansion-link-collapse-text"><i class="fa fa-minus page-footer__links-column-link-icon"></i></span></a><div class="page-footer__item"><a class="page-footer__link" href="https://tutsplus.com/teach">Teach at Envato Tuts+</a></div><div class="page-footer__item"><a class="page-footer__link" href="https://tutsplus.com/translate-for-us">Translate for Envato Tuts+</a></div><div class="page-footer__item"><a class="page-footer__link" href="https://forums.envato.com/c/project-making/envato-courses-and-tutorials">Forums</a></div></div></div><div class="page-footer__links-column"><div class="page-footer__section page-footer__section--first"><div class="page-footer__heading">Help</div><a class="page-footer__links-column-expansion-link" href="javascript:void(0);"><span class="page-footer__links-column-expansion-link-expand-text"><i class="fa fa-plus page-footer__links-column-link-icon"></i></span><span class="page-footer__links-column-expansion-link-collapse-text"><i class="fa fa-minus page-footer__links-column-link-icon"></i></span></a><div class="page-footer__item"><a class="page-footer__link" href="https://help.elements.envato.com/hc/en-us/categories/360000070683%E2%80%9D">FAQ</a></div><div class="page-footer__item"><a class="page-footer__link" href="https://help.elements.envato.com/">Help Center</a></div></div></div><div class="page-footer__links-column page-footer__links-last-column"><div class="page-footer__tuts-brand"><img alt="envato-tuts+" class="page-footer__tuts-logo-image tuts-logo" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/tuts_logo-cf1e6fd0e5ca6cc573eb3cd0c94e16d7.svg"><div class="page-footer__counts"><div class="page-footer__count-item"><div class="page-footer__count-value">26,895</div><div class="page-footer__count-label">Tutorials</div></div><div class="page-footer__count-item"><div class="page-footer__count-value">1,194</div><div class="page-footer__count-label">Courses</div></div><div class="page-footer__count-item"><div class="page-footer__count-value">33,711</div><div class="page-footer__count-label">Translations</div></div></div></div></div></div><div class="page-footer__envato-bar"><div class="page-footer__envato-bar-content"><div class="page-footer__envato-bar-content-left-column"><ul class="page-footer__envato-bar-links"><li class="page-footer__envato-bar-link-item"><a class="page-footer__envato-bar-link" href="https://envato.com/">Envato.com</a></li><li class="page-footer__envato-bar-link-item"><a class="page-footer__envato-bar-link" href="https://envato.com/#products">Our products</a></li><li class="page-footer__envato-bar-link-item"><a class="page-footer__envato-bar-link" href="https://envato.com/careers">Careers</a></li><li class="page-footer__envato-bar-link-item"><a class="page-footer__envato-bar-link" href="https://envato.com/sitemap">Sitemap</a></li></ul><div class="page-footer__copyright">© 2018 Envato Pty Ltd. Trademarks and brands are the property of their respective owners.</div></div><div class="page-footer__envato-bar-content-right-column"><ul class="page-footer__follow-us"><li class="page-footer__follow-us-element">Follow Envato Tuts+</li><li class="page-footer__follow-us-element"><a class="page-footer__social-link page-footer__facebook-link" href="https://www.facebook.com/tutsplus"></a></li><li class="page-footer__follow-us-element"><a class="page-footer__social-link page-footer__twitter-link" href="https://twitter.com/tutsplus"></a></li><li class="page-footer__follow-us-element"><a class="page-footer__social-link page-footer__googleplus-link" href="https://plus.google.com/108971748263060947124/posts"></a></li><li class="page-footer__follow-us-element"><a class="page-footer__social-link page-footer__pinterest-link" href="https://www.pinterest.com/tutsplus/"></a></li></ul></div></div></div></footer><script type="text/javascript">
/* <![CDATA[ */
  var google_conversion_id = 943617023;
  var google_custom_params = window.google_tag_params;
  var google_remarketing_only = true;
/* ]]> */
</script>
<script type="text/javascript" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/conversion.js">
</script>
<noscript>
  <div style="display:inline;">
    <img height="1" width="1" style="border-style:none;" alt="" src="//googleads.g.doubleclick.net/pagead/viewthroughconversion/943617023/?value=0&amp;guid=ON&amp;script=0"/>
  </div>
</noscript>
<div data-tether-id="1" style="top: 0px; left: 0px; position: absolute;"></div><div class="avert--sticky tether-element tether-enabled tether-abutted tether-abutted-left tether-element-attached-left tether-target-attached-left tether-element-attached-top tether-target-attached-top tether-out-of-bounds tether-out-of-bounds-bottom" style="top: 0px; left: 0px; position: absolute; transform: translateX(1297px) translateY(1553px) translateZ(0px);"><div class="avert"><div class="avert__wrapper"><div class="avert__content" id="div-gpt-1382314910331-0"></div><div class="avert__content avert__criteo" id="ctr-1382314910331-0"></div><div class="avert__label">Advertisement</div></div></div><div class="free-trial-highlight orange"><img alt="envato-tuts+" class="free-trial-highlight__logo loading" src="Data%20Structures%20With%20JavaScript%20%20Tree-Dateien/tuts_logo-cf1e6fd0e5ca6cc573eb3cd0c94e16d7.svg" data-was-processed="true"><div class="free-trial-highlight__header"><div class="free-trial-highlight__line-one"><span class="free-trial-highlight__text">Watch</span> <span class="free-trial-highlight__highlight-text">any</span></div><div class="free-trial-highlight__line-two"><span class="free-trial-highlight__text">course now</span> </div></div><a href="https://tutsplus.com/subscription_sign_up/monthly?ec_unit=sidebar-sticky"><div class="free-trial-highlight__action"><div class="free-trial-highlight__action-text">Subscribe to Access</div><div class="free-trial-highlight__action-button"><span class="fa fa-angle-right"></span></div></div></a></div></div><iframe style="display: none;"></iframe></body></html>